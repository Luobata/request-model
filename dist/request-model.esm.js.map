{"version":3,"file":"request-model.esm.js","sources":["../src/lib/conf.ts","../src/lib/help.ts","../src/request/data.ts","../src/request/chain.ts","../src/request/request.ts"],"sourcesContent":["/**\n * @desciption conf\n */\n\nexport const commitToken: symbol | string = ((): symbol | string => {\n    const key: string = '__REQUEST__MODEL__COMMIT__TOKEN';\n    if (Symbol) {\n        return Symbol(key);\n    } else {\n        return key;\n    }\n})();\n","/**\n * @description help\n */\n\n// tslint:disable no-any no-unsafe-any\n\nexport const isArray: Function = (obj: any): boolean => {\n    return Object.prototype.toString.call(obj) === '[object Array]';\n};\n\nexport const isObject: Function = (obj: any): boolean => {\n    return Object.prototype.toString.call(obj) === '[object Object]';\n};\nexport const isFunction: Function = (obj: any): obj is Function => {\n    return Function.prototype.toString.call(obj) === '[object Function]';\n};\n\nexport const isPromise: Function = (obj: any): boolean => {\n    try {\n        return typeof obj.then === 'function';\n    } catch (e) {\n        return false;\n    }\n};\n","/**\n * @description help to find data in Request\n */\nimport { IRequest } from 'Request/request';\n\ntype Iresult = Function | undefined;\n\nexport const getFunctionInRequest: Function = (\n    key: string,\n    request: IRequest,\n): Iresult => {\n    let iRequest: IRequest = request;\n    let result: Function;\n    try {\n        if (key.indexOf('/') !== -1) {\n            const keys: string[] = key.split('/');\n            keys.map(\n                (v: string, i: number): void => {\n                    if (i !== keys.length - 1) {\n                        iRequest = iRequest.modules[v];\n                    } else {\n                        result = iRequest.request[v];\n                    }\n                },\n            );\n        } else {\n            result = iRequest.request[key];\n        }\n    } catch (e) {}\n\n    return result;\n};\n","/**\n * @description chain\n */\nimport { commitToken } from 'Lib/conf';\nimport { isArray, isObject, isPromise } from 'Lib/help';\nimport { getFunctionInRequest } from 'Request/data';\nimport { IAction, IcommitWrap, IRequest } from 'Request/request';\n\n// tslint:disable no-any no-unsafe-any\n\ninterface Idefer {\n    key: deferKey;\n    args: any[];\n}\n\ntype deferKey = string | string[] | IcommitObj[];\ntype deferKeyItem = string | IcommitObj;\n\ninterface Ithen {\n    resolve: Function;\n    reject: Function;\n}\n\ninterface IcommitObj {\n    handler: string;\n    args: any[];\n}\n\nfunction isIdefer(v: any): v is Idefer {\n    return v.key !== undefined;\n}\nconst isCommitObj: Function = (v: any): boolean => {\n    return isObject(v) ? 'handler' in v : false;\n};\n\nconst getKey: Function = (v: deferKeyItem): string => {\n    return isCommitObj(v) ? (<IcommitObj>v).handler : <string>v;\n};\n\nconst getArgs: Function = (v: deferKeyItem): any[] => {\n    return isCommitObj(v) ? (<IcommitObj>v).args : [];\n};\n\nconst hasRequest: Function = (key: deferKey, request: IRequest): string => {\n    if (isArray(key)) {\n        // (<(string | IcommitObj)[]>key).filter(\n        //     (v: string | IcommitObj): boolean =>\n        //         !!getFunctionInRequest(getKey(v), request),\n        // ).length === (<(string | IcommitObj)[]>key).length\n        const keys: (string | IcommitObj)[] = (<(string | IcommitObj)[]>(\n            key\n        )).filter(\n            (v: string | IcommitObj): boolean =>\n                !getFunctionInRequest(getKey(v), request),\n        );\n\n        return keys.length\n            ? keys.map((v: IcommitObj) => (v.handler ? v.handler : v)).join(',')\n            : '';\n    } else {\n        return getFunctionInRequest(<string>key, request) ? '' : <string>key;\n        // return !!getFunctionInRequest(<string>key, request);\n    }\n};\n\nconst getAll: Function = (\n    key: (string | IcommitObj)[],\n    request: IRequest,\n    args: any[],\n): Function[] => {\n    return key.map(\n        (v: string | IcommitObj): Function =>\n            getFunctionInRequest(getKey(v), request)(...getArgs(v), ...args),\n    );\n};\n\n// tslint:disable-next-line no-empty\nconst noop: Function = (): void => {};\n\n/**\n * default class Chain\n */\nexport default class Chain {\n    private request: IRequest;\n    private actionFun: IAction;\n    private deferItem: Promise<any> | null;\n    private waitList: (Idefer | Ithen)[];\n    private resultList: any[];\n    private resolve: Function;\n    private reject: Function;\n    private alwaysFn: Function;\n    private unResolveRejection: any;\n\n    constructor(request: IRequest, action: IAction) {\n        this.request = request;\n        this.resultList = [];\n        this.waitList = [];\n        this.actionFun = action;\n    }\n\n    public commit(key: deferKey, ...args: any[]): Chain {\n        if (this.unResolveRejection) {\n            return this;\n        }\n        const keyStr: string = hasRequest(key, this.request);\n        if (keyStr) {\n            throw new Error(`can not find matched commit key: ${keyStr}`);\n        }\n\n        if (this.deferItem) {\n            this.waitList.push({\n                key,\n                args,\n            });\n        } else {\n            let defer: Promise<any>;\n            if (isArray(key)) {\n                defer = Promise.all(getAll(key, this.request, [...args]));\n            } else {\n                defer = getFunctionInRequest(<string>key, this.request)(\n                    ...args,\n                );\n            }\n            if (!isPromise(defer)) {\n                throw new Error(\n                    `The ${key} function not return a Promise function`,\n                );\n            }\n            // call entry one\n            this.deferItem = defer;\n            this.deferItem.then(\n                (result: any) => {\n                    this.commitChain(result);\n                },\n                (error: any) => {\n                    this.innerRejection(error);\n                },\n            );\n        }\n\n        return this;\n    }\n\n    public then(resolve: Function, reject?: Function): Chain {\n        if (this.deferItem) {\n            this.waitList.push({\n                resolve,\n                reject,\n            });\n        } else {\n            this.innerResolve({ resolve, reject });\n        }\n\n        return this;\n    }\n\n    public finish(resolve: Function, reject?: Function): Chain {\n        if (!this.waitList.length && !this.deferItem) {\n            this.innerResolve({ resolve, reject });\n        } else {\n            this.resolve = resolve;\n            this.reject = reject;\n        }\n\n        return this;\n    }\n\n    // tslint:disable-next-line no-reserved-keywords\n    public finally(resolve: Function, reject?: Function): Chain {\n        return this.finish(resolve, reject);\n    }\n\n    // tslint:disable-next-line no-reserved-keywords\n    public catch(reject: Function): Chain {\n        if (!this.waitList.length && !this.deferItem) {\n            this.innerResolve({ resolve: noop, reject });\n        } else {\n            this.reject = reject;\n        }\n\n        return this;\n    }\n\n    public always(always: Function): Chain {\n        this.alwaysFn = always;\n\n        return this;\n    }\n\n    public action(key: string, ...args: any[]): Chain {\n        return this.actionFun[key].call(null, this, ...args);\n    }\n\n    private commitChain(result: any): void {\n        this.resultList.push(result);\n        if (this.waitList.length) {\n            const keyObj: Idefer | Ithen = this.waitList.shift();\n            this.deferItem = null;\n            if (isIdefer(keyObj)) {\n                // object Idefer\n                this.commit(keyObj.key, ...keyObj.args, result);\n            } else {\n                // object Ithen\n                this.innerResolve(keyObj, result);\n            }\n        } else {\n            if (this.resolve) {\n                this.resolve(this.resultList);\n            }\n\n            this.innerAlways();\n        }\n    }\n\n    private innerResolve(then: Ithen, result?: any): Chain {\n        // call entry two\n        let deferItem: any;\n        if (this.unResolveRejection) {\n            if (then.reject) {\n                then.reject(this.unResolveRejection);\n                this.unResolveRejection = null;\n            } else if (this.innerRejection(this.unResolveRejection)) {\n                this.unResolveRejection = null;\n            }\n\n            return this;\n        } else {\n            try {\n                deferItem = then.resolve(result);\n            } catch (e) {\n                if (!this.innerRejection(e)) {\n                    this.unResolveRejection = e;\n                }\n\n                return this;\n            }\n        }\n        if (isPromise(deferItem)) {\n            // object Promise\n            this.deferItem = deferItem;\n            deferItem.then(\n                (data: any) => {\n                    this.commitChain(data);\n                },\n                (error: any) => {\n                    this.innerRejection(error);\n                },\n            );\n        } else if (isArray(deferItem)) {\n            // 暂时可以认为一定是 commitAll 包装\n            const item: IcommitObj[] = deferItem.map((v: IcommitWrap) => {\n                return {\n                    handler: v.key,\n                    args: v.args,\n                };\n            });\n            this.commit(item);\n        } else if (deferItem !== undefined && deferItem[commitToken]) {\n            // another commit\n            this.commit(deferItem.key, ...deferItem.args);\n        } else {\n            this.commitChain(deferItem);\n        }\n\n        return this;\n    }\n\n    private innerRejection(error: any, fn?: Function): boolean {\n        let reject!: Function;\n        // if (this.waitList.length && !isIdefer(this.waitList[0])) {\n        if (this.waitList.length) {\n            let index: number = 0;\n            for (let i: number = 0; i < this.waitList.length; i = i + 1) {\n                if (\n                    !isIdefer(this.waitList[i]) &&\n                    (<Ithen>this.waitList[i]).reject\n                ) {\n                    reject = (<Ithen>this.waitList[i]).reject;\n                    index = i;\n                    break;\n                }\n            }\n            this.waitList.splice(0, index);\n        }\n        if (!reject && this.reject) {\n            reject = this.reject;\n        }\n        if (reject) {\n            if (fn) {\n                fn();\n            }\n            this.deferItem = null;\n            reject(error);\n            this.innerAlways();\n\n            return true;\n        } else {\n            this.innerAlways();\n\n            return false;\n        }\n    }\n\n    private innerAlways(): void {\n        if (this.alwaysFn) {\n            this.alwaysFn();\n        }\n    }\n}\n","/*\n * @description request.ts\n */\n\nimport { commitToken } from 'Lib/conf';\nimport logger from 'Lib/logger';\nimport Chain from 'Request/chain';\n\n// tslint:disable no-any no-unsafe-any\n\n// export interface IRequest {\n//     [key: string]: Function | IRequest;\n// }\nexport interface IRequest {\n    request: {\n        [key: string]: Function;\n    };\n    modules: {\n        [key: string]: IRequest;\n    };\n}\n\nexport interface Irequest {\n    [key: string]: Function;\n}\n\ninterface IModule {\n    [key: string]: IRequestConfig;\n}\n\nexport interface IAction {\n    [key: string]: Function;\n}\n\ninterface IConfig {\n    promiseWrap?: boolean;\n    [key: string]: boolean;\n}\n\nexport interface IcommitWrap {\n    key: string;\n    args: any[];\n}\n\nexport interface IRequestConfig {\n    request: Irequest;\n    modules?: IModule;\n    config?: IConfig;\n    action?: IAction;\n}\n\ninterface IoutputRequest {\n    request: IRequest;\n}\n\ninterface IrequestConfig {\n    config: IConfig;\n    modules: {\n        [key: string]: IrequestConfig;\n    };\n}\n\nconst defaultConfig: IConfig = {\n    promiseWrap: false,\n};\n\n// export interface IcommitWrap {\n//     [commitToken]: boolean;\n//     key: string;\n//     args: any[];\n// }\n\n// tslint:disable promise-function-async\nconst formatFunctionToPromise: Function = (\n    flag: boolean,\n    fn: Function,\n): Function => {\n    if (flag) {\n        return (...args: any[]): Promise<any> => {\n            return new Promise(\n                (resolve: Function, reject: Function): any => {\n                    fn.call(null, resolve, reject, ...args);\n                },\n            );\n        };\n    } else {\n        return fn;\n    }\n};\n// tslint:enable promise-function-async\n\n/**\n * class Request\n */\nexport default class Request {\n    public request: IRequest;\n\n    private requestConfig: IRequestConfig;\n    private setting: IrequestConfig;\n    private action: IAction;\n\n    constructor(request: IRequestConfig) {\n        this.requestConfig = request;\n\n        this.setting = this.getRequestConfig();\n        this.action = this.requestConfig.action;\n        this.requestFormat();\n    }\n\n    public chain(): Chain {\n        return new Chain(this.request, this.action);\n    }\n\n    public commitWrap(key: string, ...args: any[]): object {\n        return {\n            [commitToken]: true,\n            key,\n            args: [...args],\n        };\n    }\n\n    public commitAll(commitWrap: IcommitWrap[]): object[] {\n        return commitWrap.map(\n            (v: IcommitWrap): object => {\n                return {\n                    [commitToken]: true,\n                    key: v.key,\n                    args: [...v.args],\n                };\n            },\n        );\n    }\n\n    private requestFormat(): void {\n        const outputRequest: IRequest = {\n            request: {},\n            modules: {},\n        };\n        const requestKes: string[] = Object.keys.call(\n            null,\n            this.requestConfig.request || {},\n        );\n        const modulesKeys: string[] = Object.keys.call(\n            null,\n            this.requestConfig.modules || {},\n        );\n\n        for (const i of requestKes) {\n            outputRequest.request[i] = formatFunctionToPromise(\n                this.setting.config.promiseWrap,\n                this.requestConfig.request[i],\n            );\n        }\n\n        const loopRequest: Function = (\n            mKeys: string[],\n            setting: IrequestConfig,\n            pModule: IModule,\n            resultRequest: IRequest,\n        ): void => {\n            for (const i of mKeys) {\n                const tmpRequest: IRequest = {\n                    request: {},\n                    modules: {},\n                };\n                const tmpKeys: string[] = Object.keys.call(\n                    null,\n                    pModule[i].request || {},\n                );\n                for (const j of tmpKeys) {\n                    tmpRequest.request[j] = formatFunctionToPromise(\n                        setting.modules[i].config.promiseWrap,\n                        <Function>pModule[i].request[j],\n                    );\n                }\n                resultRequest.modules[i] = tmpRequest;\n\n                const subModules: string[] = Object.keys.call(\n                    null,\n                    pModule[i].modules || {},\n                );\n                if (subModules.length) {\n                    loopRequest(\n                        subModules,\n                        setting.modules[i],\n                        pModule[i].modules,\n                        resultRequest.modules[i],\n                    );\n                }\n            }\n        };\n        loopRequest(\n            modulesKeys,\n            this.setting,\n            this.requestConfig.modules,\n            outputRequest,\n        );\n\n        this.request = outputRequest;\n    }\n\n    private getRequestConfig(): IrequestConfig {\n        const tmpConfig: IrequestConfig = {\n            config: defaultConfig,\n            modules: {},\n        };\n        const keys: string[] = Object.keys.call(\n            null,\n            this.requestConfig.config || {},\n        );\n        const modulesKeys: string[] = Object.keys.call(\n            null,\n            this.requestConfig.modules || {},\n        );\n\n        keys.map(\n            (v: string): void => {\n                tmpConfig.config[v] = this.requestConfig.config[v];\n            },\n        );\n\n        const loopModules: Function = (\n            modulesKey: string[],\n            modules: IModule,\n            pModules: IrequestConfig,\n        ): void => {\n            for (const i of modulesKey) {\n                pModules.modules[i] = {\n                    config: { ...pModules.config },\n                    modules: {},\n                };\n                const tmpKeys: string[] = Object.keys.call(\n                    null,\n                    modules[i].config || {},\n                );\n                for (const j of tmpKeys) {\n                    pModules.modules[i].config[j] = modules[i].config[j];\n                }\n\n                // 如果还有子module 循环\n                const subModules: string[] = Object.keys.call(\n                    null,\n                    modules[i].modules || {},\n                );\n                if (subModules.length) {\n                    loopModules(\n                        subModules,\n                        modules[i].modules,\n                        pModules.modules[i],\n                    );\n                }\n            }\n        };\n        loopModules(modulesKeys, this.requestConfig.modules, tmpConfig);\n\n        return tmpConfig;\n    }\n}\n"],"names":["commitToken","key","Symbol","isArray","obj","Object","prototype","toString","call","isObject","isPromise","then","e","getFunctionInRequest","request","iRequest","result","indexOf","keys","split","map","v","i","length","modules","undefined","isCommitObj","getKey","handler","getArgs","args","hasRequest","filter","join","getAll","noop","action","resultList","waitList","actionFun","unResolveRejection","keyStr","Error","deferItem","push","defer","Promise","all","commitChain","error","innerRejection","resolve","reject","innerResolve","finish","always","alwaysFn","keyObj","shift","isIdefer","commit","innerAlways","data","item","fn","index","splice","defaultConfig","formatFunctionToPromise","flag","requestConfig","setting","getRequestConfig","requestFormat","Chain","commitWrap","outputRequest","requestKes","modulesKeys","config","promiseWrap","loopRequest","mKeys","pModule","resultRequest","tmpRequest","tmpKeys","j","subModules","tmpConfig","loopModules","modulesKey","pModules"],"mappings":"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"}