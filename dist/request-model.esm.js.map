{"version":3,"file":"request-model.esm.js","sources":["../src/lib/conf.ts","../src/lib/help.ts","../src/request/data.ts","../src/request/chain.ts","../src/request/request.ts"],"sourcesContent":["/**\r\n * @desciption conf\r\n */\r\n\r\nexport const commitToken: symbol | string = ((): symbol | string => {\r\n    const key: string = '__REQUEST__MODEL__COMMIT__TOKEN';\r\n    if (Symbol) {\r\n        return Symbol(key);\r\n    } else {\r\n        return key;\r\n    }\r\n})();\r\n","/**\r\n * @description help\r\n */\r\n\r\n// tslint:disable no-any no-unsafe-any\r\n\r\nexport const isArray: Function = (obj: any): boolean => {\r\n    return Object.prototype.toString.call(obj) === '[object Array]';\r\n};\r\n\r\nexport const isObject: Function = (obj: any): boolean => {\r\n    return Object.prototype.toString.call(obj) === '[object Object]';\r\n};\r\nexport const isFunction: Function = (obj: any): obj is Function => {\r\n    return Function.prototype.toString.call(obj) === '[object Function]';\r\n};\r\n\r\nexport const isPromise: Function = (obj: any): boolean => {\r\n    try {\r\n        return typeof obj.then === 'function';\r\n    } catch (e) {\r\n        return false;\r\n    }\r\n};\r\n","/**\r\n * @description help to find data in Request\r\n */\r\nimport { IRequest } from 'Request/request';\r\n\r\ntype Iresult = Function | undefined;\r\n\r\nexport const getFunctionInRequest: Function = (\r\n    key: string,\r\n    request: IRequest,\r\n): Iresult => {\r\n    let iRequest: IRequest = request;\r\n    let result: Function;\r\n    try {\r\n        if (key.indexOf('/') !== -1) {\r\n            const keys: string[] = key.split('/');\r\n            keys.map(\r\n                (v: string, i: number): void => {\r\n                    if (i !== keys.length - 1) {\r\n                        iRequest = iRequest.modules[v];\r\n                    } else {\r\n                        result = iRequest.request[v];\r\n                    }\r\n                },\r\n            );\r\n        } else {\r\n            result = iRequest.request[key];\r\n        }\r\n    } catch (e) {}\r\n\r\n    return result;\r\n};\r\n","/**\r\n * @description chain\r\n */\r\nimport { commitToken } from 'Lib/conf';\r\nimport { isArray, isObject, isPromise } from 'Lib/help';\r\nimport { getFunctionInRequest } from 'Request/data';\r\nimport { IAction, IcommitWrap, IRequest } from 'Request/request';\r\n\r\n// tslint:disable no-any no-unsafe-any\r\n\r\ninterface Idefer {\r\n    key: deferKey;\r\n    args: any[];\r\n}\r\n\r\ntype deferKey = string | string[] | IcommitObj[];\r\ntype deferKeyItem = string | IcommitObj;\r\n\r\ninterface Ithen {\r\n    resolve: Function;\r\n    reject: Function;\r\n}\r\n\r\ninterface IcommitObj {\r\n    handler: string;\r\n    args: any[];\r\n}\r\n\r\nfunction isIdefer(v: any): v is Idefer {\r\n    return v.key !== undefined;\r\n}\r\nconst isCommitObj: Function = (v: any): boolean => {\r\n    return isObject(v) ? 'handler' in v : false;\r\n};\r\n\r\nconst getKey: Function = (v: deferKeyItem): string => {\r\n    return isCommitObj(v) ? (<IcommitObj>v).handler : <string>v;\r\n};\r\n\r\nconst getArgs: Function = (v: deferKeyItem): any[] => {\r\n    return isCommitObj(v) ? (<IcommitObj>v).args : [];\r\n};\r\n\r\nconst hasRequest: Function = (key: deferKey, request: IRequest): boolean => {\r\n    if (isArray(key)) {\r\n        return (\r\n            (<(string | IcommitObj)[]>key).filter(\r\n                (v: string | IcommitObj): boolean =>\r\n                    !!getFunctionInRequest(getKey(v), request),\r\n            ).length === (<(string | IcommitObj)[]>key).length\r\n        );\r\n    } else {\r\n        return !!getFunctionInRequest(<string>key, request);\r\n    }\r\n};\r\n\r\nconst getAll: Function = (\r\n    key: (string | IcommitObj)[],\r\n    request: IRequest,\r\n    args: any[],\r\n): Function[] => {\r\n    return key.map(\r\n        (v: string | IcommitObj): Function =>\r\n            getFunctionInRequest(getKey(v), request)(...getArgs(v), ...args),\r\n    );\r\n};\r\n\r\n/**\r\n * default class Chain\r\n */\r\nexport default class Chain {\r\n    private request: IRequest;\r\n    private actionFun: IAction;\r\n    private deferItem: Promise<any> | null;\r\n    private waitList: (Idefer | Ithen)[];\r\n    private resultList: any[];\r\n    private resolve: Function;\r\n    private reject: Function;\r\n    private unResolveRejection: any;\r\n\r\n    constructor(request: IRequest, action: IAction) {\r\n        this.request = request;\r\n        this.resultList = [];\r\n        this.waitList = [];\r\n        this.actionFun = action;\r\n    }\r\n\r\n    public commit(key: deferKey, ...args: any[]): Chain {\r\n        if (this.unResolveRejection) {\r\n            return this;\r\n        }\r\n        if (!hasRequest(key, this.request)) {\r\n            throw new Error(`can not find matched ${key} function`);\r\n        }\r\n\r\n        if (this.deferItem) {\r\n            this.waitList.push({\r\n                key,\r\n                args,\r\n            });\r\n        } else {\r\n            let defer: Promise<any>;\r\n            if (isArray(key)) {\r\n                defer = Promise.all(getAll(key, this.request, [...args]));\r\n            } else {\r\n                defer = getFunctionInRequest(<string>key, this.request)(\r\n                    ...args,\r\n                );\r\n            }\r\n            if (!isPromise(defer)) {\r\n                throw new Error(\r\n                    `The ${key} function not return a Promise function`,\r\n                );\r\n            }\r\n            // call entry one\r\n            this.deferItem = defer;\r\n            this.deferItem.then(\r\n                (result: any) => {\r\n                    this.commitChain(result);\r\n                },\r\n                (error: any) => {\r\n                    this.innerRejection(error);\r\n                },\r\n            );\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    public then(resolve: Function, reject?: Function): Chain {\r\n        if (this.deferItem) {\r\n            this.waitList.push({\r\n                resolve,\r\n                reject,\r\n            });\r\n        } else {\r\n            this.innerResolve({ resolve, reject });\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    public finish(resolve: Function, reject?: Function): Chain {\r\n        if (!this.waitList.length && !this.deferItem) {\r\n            this.innerResolve({ resolve, reject });\r\n        } else {\r\n            this.resolve = resolve;\r\n            this.reject = reject;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    // tslint:disable no-reserved-keywords\r\n    public catch(reject: Function): Chain {\r\n        const noop: Function = (): void => {};\r\n        if (!this.waitList.length && !this.deferItem) {\r\n            this.innerResolve({ resolve: noop, reject });\r\n        } else {\r\n            this.reject = reject;\r\n        }\r\n\r\n        return this;\r\n    }\r\n    // tslint:enable no-reserved-keywords\r\n\r\n    public action(key: string, ...args: any[]): Chain {\r\n        return this.actionFun[key].call(null, this, ...args);\r\n    }\r\n\r\n    private commitChain(result: any): void {\r\n        this.resultList.push(result);\r\n        if (this.waitList.length) {\r\n            const keyObj: Idefer | Ithen = this.waitList.shift();\r\n            this.deferItem = null;\r\n            // if ('key' in keyObj) {\r\n            if (isIdefer(keyObj)) {\r\n                // object Idefer\r\n                this.commit(keyObj.key, ...keyObj.args, result);\r\n            } else {\r\n                // object Ithen\r\n                this.innerResolve(keyObj, result);\r\n            }\r\n        } else {\r\n            if (this.resolve) {\r\n                this.resolve(this.resultList);\r\n            }\r\n        }\r\n    }\r\n\r\n    private innerResolve(then: Ithen, result?: any): Chain {\r\n        // call entry two\r\n        let deferItem: any;\r\n        if (this.unResolveRejection) {\r\n            if (then.reject) {\r\n                then.reject(this.unResolveRejection);\r\n                this.unResolveRejection = null;\r\n            } else if (this.innerRejection(this.unResolveRejection)) {\r\n                this.unResolveRejection = null;\r\n            }\r\n\r\n            return this;\r\n        } else {\r\n            try {\r\n                deferItem = then.resolve(result);\r\n            } catch (e) {\r\n                if (!this.innerRejection(e)) {\r\n                    this.unResolveRejection = e;\r\n                }\r\n\r\n                return this;\r\n            }\r\n        }\r\n        if (isPromise(deferItem)) {\r\n            // object Promise\r\n            this.deferItem = deferItem;\r\n            deferItem.then(\r\n                (data: any) => {\r\n                    this.commitChain(data);\r\n                },\r\n                (error: any) => {\r\n                    this.innerRejection(error);\r\n                },\r\n            );\r\n        } else if (isArray(deferItem)) {\r\n            // 暂时可以认为一定是 commitAll 包装\r\n            const item: IcommitObj[] = deferItem.map((v: IcommitWrap) => {\r\n                return {\r\n                    handler: v.key,\r\n                    args: v.args,\r\n                };\r\n            });\r\n            this.commit(item);\r\n        } else if (deferItem !== undefined && deferItem[commitToken]) {\r\n            // another commit\r\n            this.commit(deferItem.key, ...deferItem.args);\r\n        } else {\r\n            this.commitChain(deferItem);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    private innerRejection(error: any, fn?: Function): boolean {\r\n        let reject!: Function;\r\n        // if (this.waitList.length && !isIdefer(this.waitList[0])) {\r\n        if (this.waitList.length) {\r\n            let index: number = 0;\r\n            for (let i: number = 0; i < this.waitList.length; i = i + 1) {\r\n                if (\r\n                    !isIdefer(this.waitList[i]) &&\r\n                    (<Ithen>this.waitList[i]).reject\r\n                ) {\r\n                    reject = (<Ithen>this.waitList[i]).reject;\r\n                    index = i;\r\n                    break;\r\n                }\r\n            }\r\n            this.waitList.splice(0, index);\r\n        }\r\n        if (!reject && this.reject) {\r\n            reject = this.reject;\r\n        }\r\n        if (reject) {\r\n            if (fn) {\r\n                fn();\r\n            }\r\n            this.deferItem = null;\r\n            reject(error);\r\n\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n}\r\n","/*\r\n * @description request.ts\r\n */\r\n\r\nimport { commitToken } from 'Lib/conf';\r\nimport logger from 'Lib/logger';\r\nimport Chain from 'Request/chain';\r\n\r\n// tslint:disable no-any no-unsafe-any\r\n\r\n// export interface IRequest {\r\n//     [key: string]: Function | IRequest;\r\n// }\r\nexport interface IRequest {\r\n    request: {\r\n        [key: string]: Function;\r\n    };\r\n    modules: {\r\n        [key: string]: IRequest;\r\n    };\r\n}\r\n\r\nexport interface Irequest {\r\n    [key: string]: Function;\r\n}\r\n\r\ninterface IModule {\r\n    [key: string]: IRequestConfig;\r\n}\r\n\r\nexport interface IAction {\r\n    [key: string]: Function;\r\n}\r\n\r\ninterface IConfig {\r\n    promiseWrap?: boolean;\r\n    [key: string]: boolean;\r\n}\r\n\r\nexport interface IcommitWrap {\r\n    key: string;\r\n    args: any[];\r\n}\r\n\r\nexport interface IRequestConfig {\r\n    request: Irequest;\r\n    modules?: IModule;\r\n    config?: IConfig;\r\n    action?: IAction;\r\n}\r\n\r\ninterface IoutputRequest {\r\n    request: IRequest;\r\n}\r\n\r\ninterface IrequestConfig {\r\n    config: IConfig;\r\n    modules: {\r\n        [key: string]: IrequestConfig;\r\n    };\r\n}\r\n\r\nconst defaultConfig: IConfig = {\r\n    promiseWrap: false,\r\n};\r\n\r\n// export interface IcommitWrap {\r\n//     [commitToken]: boolean;\r\n//     key: string;\r\n//     args: any[];\r\n// }\r\n\r\n// tslint:disable promise-function-async\r\nconst formatFunctionToPromise: Function = (\r\n    flag: boolean,\r\n    fn: Function,\r\n): Function => {\r\n    if (flag) {\r\n        return (...args: any[]): Promise<any> => {\r\n            return new Promise(\r\n                (resolve: Function, reject: Function): any => {\r\n                    fn.call(null, resolve, reject, ...args);\r\n                },\r\n            );\r\n        };\r\n    } else {\r\n        return fn;\r\n    }\r\n};\r\n// tslint:enable promise-function-async\r\n\r\n/**\r\n * class Request\r\n */\r\nexport default class Request {\r\n    public request: IRequest;\r\n\r\n    private requestConfig: IRequestConfig;\r\n    private setting: IrequestConfig;\r\n    private action: IAction;\r\n\r\n    constructor(request: IRequestConfig) {\r\n        this.requestConfig = request;\r\n\r\n        this.setting = this.getRequestConfig();\r\n        console.log(this.setting);\r\n        this.action = this.requestConfig.action;\r\n        this.requestFormat();\r\n    }\r\n\r\n    public chain(): Chain {\r\n        return new Chain(this.request, this.action);\r\n    }\r\n\r\n    public commitWrap(key: string, ...args: any[]): object {\r\n        return {\r\n            [commitToken]: true,\r\n            key,\r\n            args: [...args],\r\n        };\r\n    }\r\n\r\n    public commitAll(commitWrap: IcommitWrap[]): object[] {\r\n        return commitWrap.map(\r\n            (v: IcommitWrap): object => {\r\n                return {\r\n                    [commitToken]: true,\r\n                    key: v.key,\r\n                    args: [...v.args],\r\n                };\r\n            },\r\n        );\r\n    }\r\n\r\n    private requestFormat(): void {\r\n        const outputRequest: IRequest = {\r\n            request: {},\r\n            modules: {},\r\n        };\r\n        const requestKes: string[] = Object.keys.call(\r\n            null,\r\n            this.requestConfig.request || {},\r\n        );\r\n        const modulesKeys: string[] = Object.keys.call(\r\n            null,\r\n            this.requestConfig.modules || {},\r\n        );\r\n\r\n        for (const i of requestKes) {\r\n            outputRequest.request[i] = formatFunctionToPromise(\r\n                this.setting.config.promiseWrap,\r\n                this.requestConfig.request[i],\r\n            );\r\n        }\r\n\r\n        const loopRequest: Function = (\r\n            mKeys: string[],\r\n            setting: IrequestConfig,\r\n            pModule: IModule,\r\n            resultRequest: IRequest,\r\n        ) => {\r\n            for (const i of mKeys) {\r\n                const tmpRequest: IRequest = {\r\n                    request: {},\r\n                    modules: {},\r\n                };\r\n                const tmpKeys: string[] = Object.keys.call(\r\n                    null,\r\n                    pModule[i].request || {},\r\n                );\r\n                for (const j of tmpKeys) {\r\n                    tmpRequest.request[j] = formatFunctionToPromise(\r\n                        setting.modules[i].config.promiseWrap,\r\n                        <Function>pModule[i].request[j],\r\n                    );\r\n                }\r\n                resultRequest.modules[i] = tmpRequest;\r\n\r\n                const subModules: string[] = Object.keys.call(\r\n                    null,\r\n                    pModule[i].modules || {},\r\n                );\r\n                if (subModules.length) {\r\n                    loopRequest(\r\n                        subModules,\r\n                        setting.modules[i],\r\n                        pModule[i].modules,\r\n                        resultRequest.modules[i],\r\n                    );\r\n                }\r\n            }\r\n        };\r\n        loopRequest(\r\n            modulesKeys,\r\n            this.setting,\r\n            this.requestConfig.modules,\r\n            outputRequest,\r\n        );\r\n\r\n        this.request = outputRequest;\r\n        console.log(this.request);\r\n    }\r\n\r\n    private getRequestConfig(): IrequestConfig {\r\n        const tmpConfig: IrequestConfig = {\r\n            config: defaultConfig,\r\n            modules: {},\r\n        };\r\n        const keys: string[] = Object.keys.call(\r\n            null,\r\n            this.requestConfig.config || {},\r\n        );\r\n        const modulesKeys: string[] = Object.keys.call(\r\n            null,\r\n            this.requestConfig.modules || {},\r\n        );\r\n\r\n        keys.map(\r\n            (v: string): void => {\r\n                tmpConfig.config[v] = this.requestConfig.config[v];\r\n            },\r\n        );\r\n\r\n        const loopModules = (\r\n            modulesKeys: string[],\r\n            modules: IModule,\r\n            pModules: IrequestConfig,\r\n        ) => {\r\n            for (const i of modulesKeys) {\r\n                pModules.modules[i] = {\r\n                    config: { ...pModules.config },\r\n                    modules: {},\r\n                };\r\n                const tmpKeys: string[] = Object.keys.call(\r\n                    null,\r\n                    modules[i].config || {},\r\n                );\r\n                for (const j of tmpKeys) {\r\n                    pModules.modules[i].config[j] = modules[i].config[j];\r\n                }\r\n\r\n                // 如果还有子module 循环\r\n                const subModules: string[] = Object.keys.call(\r\n                    null,\r\n                    modules[i].modules || {},\r\n                );\r\n                if (subModules.length) {\r\n                    loopModules(\r\n                        subModules,\r\n                        modules[i].modules,\r\n                        pModules.modules[i],\r\n                    );\r\n                }\r\n            }\r\n        };\r\n        loopModules(modulesKeys, this.requestConfig.modules, tmpConfig);\r\n\r\n        return tmpConfig;\r\n    }\r\n}\r\n"],"names":["commitToken","key","Symbol","isArray","obj","Object","prototype","toString","call","isObject","isPromise","then","e","getFunctionInRequest","request","iRequest","result","indexOf","keys","split","map","v","i","length","modules","undefined","isCommitObj","getKey","handler","getArgs","args","hasRequest","filter","getAll","action","resultList","waitList","actionFun","unResolveRejection","Error","deferItem","push","defer","Promise","all","commitChain","error","innerRejection","resolve","reject","innerResolve","noop","keyObj","shift","isIdefer","commit","data","item","fn","index","splice","defaultConfig","formatFunctionToPromise","flag","requestConfig","setting","getRequestConfig","log","requestFormat","Chain","commitWrap","outputRequest","requestKes","modulesKeys","config","promiseWrap","loopRequest","mKeys","pModule","resultRequest","tmpRequest","tmpKeys","j","subModules","tmpConfig","loopModules","pModules"],"mappings":"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"}