{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap a213afd978f030dfce4d","webpack:///./src/lib/conf.ts","webpack:///./src/index.js","webpack:///./src/request/request.ts","webpack:///./src/request/chain.ts","webpack:///./src/lib/help.ts","webpack:///./src/request/data.ts"],"names":["root","factory","exports","module","define","amd","self","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","commitToken","key","Symbol","__webpack_exports__","__WEBPACK_IMPORTED_MODULE_0_Request_request_ts__","__WEBPACK_IMPORTED_MODULE_1_Request_chain__","defaultConfig","promiseWrap","formatFunctionToPromise","flag","fn","args","Promise","resolve","reject","[object Object]","request","requestConfig","setting","getRequestConfig","action","requestFormat","__WEBPACK_IMPORTED_MODULE_0_Lib_conf__","commitWrap","map","v","outputRequest","requestKes","keys","modulesKeys","config","tmpRequest","tmpKeys","j","tmpConfig","assign","__WEBPACK_IMPORTED_MODULE_2_Request_data__","isIdefer","undefined","isCommitObj","__WEBPACK_IMPORTED_MODULE_1_Lib_help__","getKey","handler","hasRequest","filter","length","getAll","getArgs","resultList","waitList","actionFun","Error","deferItem","push","defer","all","then","result","commitChain","error","innerRejection","innerResolve","keyObj","shift","commit","e","data","item","obj","toString","iRequest","indexOf","split","Function"],"mappings":"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","file":"request-model.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"request-model\"] = factory();\n\telse\n\t\troot[\"request-model\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap a213afd978f030dfce4d","/**\r\n * @desciption conf\r\n */\r\n\r\nexport const commitToken: symbol | string = ((): symbol | string => {\r\n    const key: string = '__REQUEST__MODEL__COMMIT__TOKEN';\r\n    if (Symbol) {\r\n        return Symbol(key);\r\n    } else {\r\n        return key;\r\n    }\r\n})();\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/conf.ts","import Request from 'Request/request.ts';\r\n\r\nexport default Request;\r\n// module.exports = Request;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","/*\r\n * @description request.ts\r\n */\r\n\r\nimport { commitToken } from 'Lib/conf';\r\nimport logger from 'Lib/logger';\r\nimport Chain from 'Request/chain';\r\n\r\n// tslint:disable no-any no-unsafe-any\r\n\r\nexport interface IRequest {\r\n    [key: string]: Function | IRequest;\r\n}\r\n\r\ninterface IModule {\r\n    [key: string]: IRequestConfig;\r\n}\r\n\r\nexport interface IAction {\r\n    [key: string]: Function;\r\n}\r\n\r\ninterface IConfig {\r\n    promiseWrap?: boolean;\r\n    [key: string]: boolean;\r\n}\r\n\r\nexport interface IcommitWrap {\r\n    key: string;\r\n    args: any[];\r\n}\r\n\r\nexport interface IRequestConfig {\r\n    request: IRequest;\r\n    modules?: IModule;\r\n    config?: IConfig;\r\n    action?: IAction;\r\n}\r\n\r\ninterface IoutputRequest {\r\n    request: IRequest;\r\n}\r\n\r\ninterface IrequestConfig {\r\n    config: IConfig;\r\n    modules?: {\r\n        [key: string]: IConfig;\r\n    };\r\n}\r\n\r\nconst defaultConfig: IConfig = {\r\n    promiseWrap: false,\r\n};\r\n\r\n// export interface IcommitWrap {\r\n//     [commitToken]: boolean;\r\n//     key: string;\r\n//     args: any[];\r\n// }\r\n\r\n// tslint:disable promise-function-async\r\nconst formatFunctionToPromise: Function = (\r\n    flag: boolean,\r\n    fn: Function,\r\n): Function => {\r\n    if (flag) {\r\n        return (...args: any[]): Promise<any> => {\r\n            return new Promise(\r\n                (resolve: Function, reject: Function): any => {\r\n                    fn.call(null, resolve, reject, ...args);\r\n                },\r\n            );\r\n        };\r\n    } else {\r\n        return fn;\r\n    }\r\n};\r\n// tslint:enable promise-function-async\r\n\r\n/**\r\n * class Request\r\n */\r\nexport default class Request {\r\n    public request: IRequest;\r\n\r\n    private requestConfig: IRequestConfig;\r\n    private setting: IrequestConfig;\r\n    private action: IAction;\r\n\r\n    constructor(request: IRequestConfig) {\r\n        this.requestConfig = request;\r\n\r\n        this.setting = this.getRequestConfig();\r\n        this.action = this.requestConfig.action;\r\n        this.requestFormat();\r\n    }\r\n\r\n    public chain(): Chain {\r\n        return new Chain(this.request, this.action);\r\n    }\r\n\r\n    public commitWrap(key: string, ...args: any[]): object {\r\n        return {\r\n            [commitToken]: true,\r\n            key,\r\n            args: [...args],\r\n        };\r\n    }\r\n\r\n    public commitAll(commitWrap: IcommitWrap[]): object[] {\r\n        return commitWrap.map(\r\n            (v: IcommitWrap): object => {\r\n                return {\r\n                    [commitToken]: true,\r\n                    key: v.key,\r\n                    args: [...v.args],\r\n                };\r\n            },\r\n        );\r\n    }\r\n\r\n    private requestFormat(): void {\r\n        const outputRequest: IRequest = {};\r\n        const requestKes: string[] = Object.keys.call(\r\n            null,\r\n            this.requestConfig.request || {},\r\n        );\r\n        const modulesKeys: string[] = Object.keys.call(\r\n            null,\r\n            this.requestConfig.modules || {},\r\n        );\r\n\r\n        for (const i of requestKes) {\r\n            outputRequest[i] = formatFunctionToPromise(\r\n                this.setting.config.promiseWrap,\r\n                this.requestConfig.request[i],\r\n            );\r\n        }\r\n\r\n        for (const i of modulesKeys) {\r\n            const tmpRequest: IRequest = {};\r\n            const tmpKeys: string[] = Object.keys.call(\r\n                null,\r\n                this.requestConfig.modules[i].request || {},\r\n            );\r\n            for (const j of tmpKeys) {\r\n                tmpRequest[j] = formatFunctionToPromise(\r\n                    this.setting.modules[i].promiseWrap,\r\n                    <Function>this.requestConfig.modules[i].request[j],\r\n                );\r\n            }\r\n            outputRequest[i] = tmpRequest;\r\n        }\r\n\r\n        this.request = outputRequest;\r\n    }\r\n\r\n    private getRequestConfig(): IrequestConfig {\r\n        const tmpConfig: IrequestConfig = {\r\n            config: defaultConfig,\r\n            modules: {},\r\n        };\r\n        const keys: string[] = Object.keys.call(\r\n            null,\r\n            this.requestConfig.config || {},\r\n        );\r\n        const modulesKeys: string[] = Object.keys.call(\r\n            null,\r\n            this.requestConfig.modules || {},\r\n        );\r\n\r\n        keys.map(\r\n            (v: string): void => {\r\n                tmpConfig.config[v] = this.requestConfig.config[v];\r\n            },\r\n        );\r\n\r\n        for (const i of modulesKeys) {\r\n            tmpConfig.modules[i] = { ...tmpConfig.config };\r\n            const tmpKeys: string[] = Object.keys.call(\r\n                null,\r\n                this.requestConfig.modules[i].config || {},\r\n            );\r\n            for (const j of tmpKeys) {\r\n                tmpConfig.modules[i][j] = this.requestConfig.modules[i].config[\r\n                    j\r\n                ];\r\n            }\r\n        }\r\n\r\n        return tmpConfig;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/request/request.ts","/**\r\n * @description chain\r\n */\r\nimport { commitToken } from 'Lib/conf';\r\nimport { isArray, isObject, isPromise } from 'Lib/help';\r\nimport { getFunctionInRequest } from 'Request/data';\r\nimport { IAction, IcommitWrap, IRequest } from 'Request/request';\r\n\r\n// tslint:disable no-any no-unsafe-any\r\n\r\ninterface Idefer {\r\n    key: deferKey;\r\n    args: any[];\r\n}\r\n\r\ntype deferKey = string | string[] | IcommitObj[];\r\ntype deferKeyItem = string | IcommitObj;\r\n\r\ninterface Ithen {\r\n    resolve: Function;\r\n    reject: Function;\r\n}\r\n\r\ninterface IcommitObj {\r\n    handler: string;\r\n    args: any[];\r\n}\r\n\r\nfunction isIdefer(v: any): v is Idefer {\r\n    // return 'key' in v;\r\n    return v.key !== undefined;\r\n}\r\nconst isCommitObj: Function = (v: any): boolean => {\r\n    return isObject(v) ? 'handler' in v : false;\r\n};\r\n\r\nconst getKey: Function = (v: deferKeyItem): string => {\r\n    return isCommitObj(v) ? (<IcommitObj>v).handler : <string>v;\r\n};\r\n\r\nconst getArgs: Function = (v: deferKeyItem): any[] => {\r\n    return isCommitObj(v) ? (<IcommitObj>v).args : [];\r\n};\r\n\r\nconst hasRequest: Function = (key: deferKey, request: IRequest): boolean => {\r\n    if (isArray(key)) {\r\n        return (\r\n            (<(string | IcommitObj)[]>key).filter(\r\n                (v: string | IcommitObj): boolean =>\r\n                    !!getFunctionInRequest(getKey(v), request),\r\n            ).length === (<(string | IcommitObj)[]>key).length\r\n        );\r\n    } else {\r\n        return !!getFunctionInRequest(<string>key, request);\r\n    }\r\n};\r\n\r\nconst getAll: Function = (\r\n    key: (string | IcommitObj)[],\r\n    request: IRequest,\r\n    args: any[],\r\n): Function[] => {\r\n    return key.map(\r\n        (v: string | IcommitObj): Function =>\r\n            getFunctionInRequest(getKey(v), request)(...getArgs(v), ...args),\r\n    );\r\n};\r\n\r\n/**\r\n * default class Chain\r\n */\r\nexport default class Chain {\r\n    private request: IRequest;\r\n    private actionFun: IAction;\r\n    private deferItem: Promise<any> | null;\r\n    private waitList: (Idefer | Ithen)[];\r\n    private resultList: any[];\r\n    private resolve: Function;\r\n    private reject: Function;\r\n\r\n    constructor(request: IRequest, action: IAction) {\r\n        this.request = request;\r\n        this.resultList = [];\r\n        this.waitList = [];\r\n        this.actionFun = action;\r\n    }\r\n\r\n    public commit(key: deferKey, ...args: any[]): Chain {\r\n        if (!hasRequest(key, this.request)) {\r\n            throw new Error(`can not find matched ${key} function`);\r\n        }\r\n\r\n        if (this.deferItem) {\r\n            this.waitList.push({\r\n                key,\r\n                args,\r\n            });\r\n        } else {\r\n            let defer: Promise<any>;\r\n            if (isArray(key)) {\r\n                defer = Promise.all(getAll(key, this.request, [...args]));\r\n            } else {\r\n                defer = getFunctionInRequest(<string>key, this.request)(\r\n                    ...args,\r\n                );\r\n            }\r\n            if (!isPromise(defer)) {\r\n                throw new Error(\r\n                    `The ${key} function not return a Promise function`,\r\n                );\r\n            }\r\n            // call entry one\r\n            this.deferItem = defer;\r\n            this.deferItem.then(\r\n                (result: any) => {\r\n                    this.commitChain(result);\r\n                },\r\n                (error: any) => {\r\n                    this.innerRejection(error);\r\n                },\r\n            );\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    public then(resolve: Function, reject: Function): Chain {\r\n        if (this.deferItem) {\r\n            this.waitList.push({\r\n                resolve,\r\n                reject,\r\n            });\r\n        } else {\r\n            this.innerResolve({ resolve, reject });\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    public finish(resolve: Function, reject: Function): Chain {\r\n        this.resolve = resolve;\r\n        this.reject = reject;\r\n\r\n        return this;\r\n    }\r\n\r\n    // tslint:disable no-reserved-keywords\r\n    public catch(reject: Function): Chain {\r\n        this.reject = reject;\r\n\r\n        return this;\r\n    }\r\n    // tslint:enable no-reserved-keywords\r\n\r\n    public action(key: string, ...args: any[]): Chain {\r\n        return this.actionFun[key].call(null, this, ...args);\r\n    }\r\n\r\n    private commitChain(result: any): void {\r\n        this.resultList.push(result);\r\n        if (this.waitList.length) {\r\n            const keyObj: Idefer | Ithen = this.waitList.shift();\r\n            this.deferItem = null;\r\n            // if ('key' in keyObj) {\r\n            if (isIdefer(keyObj)) {\r\n                // object Idefer\r\n                this.commit(keyObj.key, ...keyObj.args, result);\r\n            } else {\r\n                // object Ithen\r\n                this.innerResolve(keyObj, result);\r\n            }\r\n        } else {\r\n            if (this.resolve) {\r\n                this.resolve(this.resultList);\r\n            }\r\n        }\r\n    }\r\n\r\n    private innerResolve(then: Ithen, result?: any): Chain {\r\n        // call entry two\r\n        let deferItem: any;\r\n        try {\r\n            deferItem = then.resolve(result);\r\n        } catch (e) {\r\n            this.innerRejection(e);\r\n        }\r\n        if (isPromise(deferItem)) {\r\n            // object Promise\r\n            this.deferItem = deferItem;\r\n            deferItem.then(\r\n                (data: any) => {\r\n                    this.commitChain(data);\r\n                },\r\n                (error: any) => {\r\n                    this.innerRejection(error);\r\n                },\r\n            );\r\n        } else if (isArray(deferItem)) {\r\n            // 暂时可以认为一定是 commitAll 包装\r\n            const item: IcommitObj[] = deferItem.map((v: IcommitWrap) => {\r\n                return {\r\n                    handler: v.key,\r\n                    args: v.args,\r\n                };\r\n            });\r\n            this.commit(item);\r\n        } else if (deferItem !== undefined && deferItem[commitToken]) {\r\n            // another commit\r\n            this.commit(deferItem.key, ...deferItem.args);\r\n        } else {\r\n            this.commitChain(deferItem);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    private innerRejection(error: any, fn?: Function): void {\r\n        let reject!: Function;\r\n        if (this.waitList.length && !isIdefer(this.waitList[0])) {\r\n            reject = (<Ithen>this.waitList[0]).reject;\r\n        } else {\r\n            reject = this.reject;\r\n        }\r\n        if (reject) {\r\n            fn && fn();\r\n            this.deferItem = null;\r\n            reject(error);\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/request/chain.ts","/**\r\n * @description help\r\n */\r\n\r\n// tslint:disable no-any no-unsafe-any\r\n\r\nexport const isArray: Function = (obj: any): boolean => {\r\n    return Object.prototype.toString.call(obj) === '[object Array]';\r\n};\r\n\r\nexport const isObject: Function = (obj: any): boolean => {\r\n    return Object.prototype.toString.call(obj) === '[object Object]';\r\n};\r\nexport const isFunction: Function = (obj: any): obj is Function => {\r\n    return Function.prototype.toString.call(obj) === '[object Function]';\r\n};\r\n\r\nexport const isPromise: Function = (obj: any): boolean => {\r\n    try {\r\n        return typeof obj.then === 'function';\r\n    } catch (e) {\r\n        return false;\r\n    }\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/help.ts","/**\r\n * @description help to find data in Request\r\n */\r\nimport { IRequest } from 'Request/request';\r\n\r\ntype Iresult = Function | undefined;\r\n\r\nexport const getFunctionInRequest: Function = (\r\n    key: string,\r\n    request: IRequest,\r\n): Iresult => {\r\n    let iRequest: IRequest | Function = request;\r\n    if (key.indexOf('/') !== -1) {\r\n        const keys: string[] = key.split('/');\r\n        keys.map((v: string): void => {\r\n            if (!(iRequest instanceof Function)) {\r\n                iRequest = iRequest[v];\r\n            }\r\n        });\r\n    } else {\r\n        iRequest = iRequest[key];\r\n    }\r\n    if (iRequest instanceof Function) {\r\n        return iRequest;\r\n    }\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/request/data.ts"],"sourceRoot":""}