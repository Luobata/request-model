{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap f1e5ba39ea98dbaf39a1","webpack:///./src/lib/conf.ts","webpack:///./src/index.js","webpack:///./src/request/request.ts","webpack:///./src/request/chain.ts","webpack:///./src/lib/help.ts","webpack:///./src/request/data.ts"],"names":["root","factory","exports","module","define","amd","self","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","commitToken","key","Symbol","__webpack_exports__","__WEBPACK_IMPORTED_MODULE_0_Request_request_ts___default","conf_1","chain_1","default","[object Object]","request","requestConfig","requestFormat","args","outputRequest","tmpRequest","j","help_1","data_1","isCommitObj","v","isObject","getKey","handler","hasRequest","isArray","filter","getFunctionInRequest","length","getAll","map","getArgs","resultList","waitList","Error","deferItem","push","defer","Promise","all","isPromise","then","result","commitChain","error","reject","resolve","keyObj","shift","commit","innerResolve","data","obj","toString","isFunction","Function","e","iRequest","indexOf","split"],"mappings":"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","file":"request-model.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"request-model\"] = factory();\n\telse\n\t\troot[\"request-model\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap f1e5ba39ea98dbaf39a1","/**\n * @desciption conf\n */\n\nexport const commitToken: symbol | string = ((): symbol | string => {\n    const key: string = '__REQUEST__MODEL__COMMIT__TOKEN';\n    if (Symbol) {\n        return Symbol(key);\n    } else {\n        return key;\n    }\n})();\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/conf.ts","import Request from 'Request/request.ts';\n\nexport default Request;\n// module.exports = Request;\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","/*\n * @description request.ts\n */\n\nimport { commitToken } from 'Lib/conf';\nimport logger from 'Lib/logger';\nimport Chain from 'Request/chain';\n\n// tslint:disable no-any\n\nexport interface IRequest {\n    [key: string]: Function | IRequest;\n}\n\ninterface IModule {\n    [key: string]: IRequest;\n}\n\ninterface IRequestConfig {\n    request: IRequest;\n    modules?: IModule;\n}\n\ninterface IoutputRequest {\n    request: IRequest;\n}\n\n/**\n * class Request\n */\nexport default class Request {\n    public request: IRequest;\n\n    private requestConfig: IRequestConfig;\n\n    constructor(request: IRequestConfig) {\n        this.requestConfig = request;\n\n        this.requestFormat();\n    }\n\n    public chain(): Chain {\n        return new Chain(this);\n    }\n\n    public commitWrap(key: string, ...args: any[]): object {\n        return {\n            [commitToken]: true,\n            key,\n            args: [...args],\n        };\n    }\n\n    private requestFormat(): void {\n        const outputRequest: IRequest = {};\n        for (const i in this.requestConfig.request) {\n            outputRequest[i] = this.requestConfig.request[i];\n        }\n\n        for (const i in this.requestConfig.modules) {\n            const tmpRequest: IRequest = {};\n            for (const j in this.requestConfig.modules[i].request) {\n                tmpRequest[j] = (<IRequest>this.requestConfig.modules[i]\n                    .request)[j];\n            }\n            outputRequest[i] = tmpRequest;\n        }\n\n        this.request = outputRequest;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/request/request.ts","/**\n * @description chain\n */\nimport { commitToken } from 'Lib/conf';\nimport { isArray, isObject, isPromise } from 'Lib/help';\nimport { getFunctionInRequest } from 'Request/data';\nimport Request from 'Request/request';\n\n// tslint:disable no-any\n\ninterface Idefer {\n    key: deferKey;\n    args: any[];\n}\n\ntype deferKey = string | string[] | IcommitObj[];\ntype deferKeyItem = string | IcommitObj;\n\ninterface Ithen {\n    resolve: Function;\n    reject: Function;\n}\n\ninterface IcommitObj {\n    handler: string;\n    args: any[];\n}\n\nconst isCommitObj: Function = (v: any): boolean => {\n    return isObject(v) ? 'handler' in v : false;\n};\n\nconst getKey: Function = (v: deferKeyItem): string => {\n    return isCommitObj(v) ? (<IcommitObj>v).handler : <string>v;\n};\n\nconst getArgs: Function = (v: deferKeyItem): any[] => {\n    return isCommitObj(v) ? (<IcommitObj>v).args : [];\n};\n\nconst hasRequest: Function = (key: deferKey, request: Request): boolean => {\n    if (isArray(key)) {\n        return (\n            (<(string | IcommitObj)[]>key).filter(\n                (v: string | IcommitObj): boolean =>\n                    // !!request.request.hasOwnProperty(getKey(v)),\n                    !!getFunctionInRequest(getKey(v), request),\n            ).length === (<(string | IcommitObj)[]>key).length\n        );\n    } else {\n        return !!getFunctionInRequest(<string>key, request);\n        // return !!request.request.hasOwnProperty(<string>key);\n    }\n};\n\nconst getAll: Function = (\n    key: (string | IcommitObj)[],\n    request: Request,\n    args: any[],\n): Function[] => {\n    return key.map((v: string | IcommitObj): Function =>\n        // request.request[getKey(v)](...getArgs(v), ...args),\n        getFunctionInRequest(getKey(v), request)(...getArgs(v), ...args),\n    );\n};\n\n/**\n * default class Chain\n */\nexport default class Chain {\n    private request: Request;\n    private deferItem: Promise<any> | null;\n    private waitList: (Idefer | Ithen)[];\n    private resultList: any[];\n    private resolve: Function;\n    private reject: Function;\n\n    constructor(request: Request) {\n        this.request = request;\n        this.resultList = [];\n        this.waitList = [];\n    }\n\n    public commit(key: deferKey, ...args: any[]): Chain {\n        if (!hasRequest(key, this.request)) {\n            throw new Error(`can not find matched ${key} function`);\n        }\n\n        if (this.deferItem) {\n            this.waitList.push({\n                key,\n                args,\n            });\n        } else {\n            let defer: Promise<any>;\n            if (isArray(key)) {\n                defer = Promise.all(getAll(key, this.request, [...args]));\n            } else {\n                // defer = this.request.request[<string>key](...args);\n                defer = getFunctionInRequest(<string>key, this.request)(\n                    ...args,\n                );\n            }\n            if (!isPromise(defer)) {\n                throw new Error(\n                    `The ${key} function not return a Promise function`,\n                );\n            }\n            this.deferItem = defer;\n            this.deferItem.then(\n                (result: any) => {\n                    this.commitChain(result);\n                },\n                (error: any) => {\n                    if (this.reject) {\n                        this.deferItem = null;\n                        this.reject(error);\n                    }\n                },\n            );\n        }\n\n        return this;\n    }\n\n    public then(resolve: Function, reject: Function): Chain {\n        this.waitList.push({\n            resolve,\n            reject,\n        });\n\n        return this;\n    }\n\n    public finish(resolve: Function, reject: Function): Chain {\n        this.resolve = resolve;\n        this.reject = reject;\n\n        return this;\n    }\n\n    // tslint:disable no-reserved-keywords\n    public catch(reject: Function): Chain {\n        this.reject = reject;\n\n        return this;\n    }\n    // tslint:enable no-reserved-keywords\n\n    private commitChain(result: any): void {\n        this.resultList.push(result);\n        if (this.waitList.length) {\n            const keyObj: Idefer | Ithen = this.waitList.shift();\n            this.deferItem = null;\n            if ('key' in keyObj) {\n                // object Idefer\n                this.commit(keyObj.key, ...keyObj.args, result);\n            } else {\n                // object Ithen\n                this.innerResolve(keyObj, result);\n            }\n        } else {\n            if (this.resolve) {\n                this.resolve(this.resultList);\n            }\n        }\n    }\n\n    private innerResolve(then: Ithen, result: any): Chain {\n        const deferItem: any = then.resolve(result);\n        if (isPromise(deferItem)) {\n            // object Promise\n            deferItem.then(\n                (data: any) => {\n                    this.commitChain(data);\n                    // this.resultList.push(data);\n                },\n                (error: any) => {\n                    if (this.reject) {\n                        this.reject(error);\n                    }\n                },\n            );\n        } else if (deferItem[commitToken]) {\n            // another commit\n            this.commit(deferItem.key, ...deferItem.args);\n        } else {\n            this.commitChain(deferItem);\n        }\n\n        return this;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/request/chain.ts","/**\n * @description help\n */\n\n// tslint:disable no-any\n\nexport const isArray: Function = (obj: any): boolean => {\n    return Object.prototype.toString.call(obj) === '[object Array]';\n};\n\nexport const isObject: Function = (obj: any): boolean => {\n    return Object.prototype.toString.call(obj) === '[object Object]';\n};\nexport const isFunction: Function = (obj: any): obj is Function => {\n    return Function.prototype.toString.call(obj) === '[object Function]';\n};\n\nexport const isPromise: Function = (obj: any): boolean => {\n    try {\n        return typeof obj.then === 'function';\n    } catch (e) {\n        return false;\n    }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/help.ts","/**\n * @description help to find data in Request\n */\nimport Request, { IRequest } from 'Request/request';\n\ntype Iresult = Function | undefined;\n\nexport const getFunctionInRequest: Function = (\n    key: string,\n    request: Request,\n): Iresult => {\n    let iRequest: IRequest | Function = request.request;\n    if (key.indexOf('/') !== -1) {\n        const keys: string[] = key.split('/');\n        keys.map((v: string): any => {\n            // if (!isFunction(iRequest)) {\n            if (!(iRequest instanceof Function)) {\n                iRequest = (<IRequest>iRequest)[v];\n            }\n        });\n    } else {\n        iRequest = iRequest[key];\n    }\n    if (iRequest instanceof Function) {\n        return iRequest;\n    }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/request/data.ts"],"sourceRoot":""}