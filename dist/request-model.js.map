{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 939e4d80ca1e042c0fc8","webpack:///./src/lib/conf.ts","webpack:///./src/index.js","webpack:///./src/request/request.ts","webpack:///./src/request/chain.ts","webpack:///./src/lib/help.ts","webpack:///./src/request/data.ts"],"names":["root","factory","exports","module","define","amd","self","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","commitToken","key","Symbol","__webpack_exports__","__WEBPACK_IMPORTED_MODULE_0_Request_request_ts__","__WEBPACK_IMPORTED_MODULE_1_Request_chain__","defaultConfig","promiseWrap","formatFunctionToPromise","flag","fn","args","Promise","resolve","reject","[object Object]","request","requestConfig","setting","getRequestConfig","action","requestFormat","__WEBPACK_IMPORTED_MODULE_0_Lib_conf__","commitWrap","map","v","outputRequest","requestKes","keys","modulesKeys","config","tmpRequest","tmpKeys","j","tmpConfig","assign","__WEBPACK_IMPORTED_MODULE_2_Request_data__","isCommitObj","__WEBPACK_IMPORTED_MODULE_1_Lib_help__","getKey","handler","hasRequest","filter","length","getAll","getArgs","resultList","waitList","actionFun","Error","deferItem","push","defer","all","then","result","commitChain","error","innerResolve","keyObj","shift","commit","data","item","obj","toString","e","iRequest","indexOf","split","Function"],"mappings":"CAAA,SAAAA,EAAAC,GACA,iBAAAC,SAAA,iBAAAC,OACAA,OAAAD,QAAAD,IACA,mBAAAG,eAAAC,IACAD,UAAAH,GACA,iBAAAC,QACAA,QAAA,iBAAAD,IAEAD,EAAA,iBAAAC,IARA,CASC,oBAAAK,UAAAC,KAAA,WACD,mBCTA,IAAAC,KAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAR,QAGA,IAAAC,EAAAK,EAAAE,IACAC,EAAAD,EACAE,GAAA,EACAV,YAUA,OANAW,EAAAH,GAAAI,KAAAX,EAAAD,QAAAC,IAAAD,QAAAO,GAGAN,EAAAS,GAAA,EAGAT,EAAAD,QAqCA,OAhCAO,EAAAM,EAAAF,EAGAJ,EAAAO,EAAAR,EAGAC,EAAAQ,EAAA,SAAAf,EAAAgB,EAAAC,GACAV,EAAAW,EAAAlB,EAAAgB,IACAG,OAAAC,eAAApB,EAAAgB,GACAK,cAAA,EACAC,YAAA,EACAC,IAAAN,KAMAV,EAAAiB,EAAA,SAAAvB,GACA,IAAAgB,EAAAhB,KAAAwB,WACA,WAA2B,OAAAxB,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAM,EAAAQ,EAAAE,EAAA,IAAAA,GACAA,GAIAV,EAAAW,EAAA,SAAAQ,EAAAC,GAAsD,OAAAR,OAAAS,UAAAC,eAAAjB,KAAAc,EAAAC,IAGtDpB,EAAAuB,EAAA,IAGAvB,IAAAwB,EAAA,kCCzDO,MAAMC,EAA+B,MACxC,MAAMC,EAAc,kCACpB,OAAIC,OACOA,OAAOD,GAEPA,GAL6B,GAOvCE,EAAA,EAAAH,4FCTLG,EAAA,QAAeC,EAAf,2CCFAC,EAAA9B,EAAA,GAkDA,MAAM+B,GACFC,aAAa,GASXC,EAAoC,CACtCC,EACAC,IAEID,EACO,IAAIE,IACA,IAAIC,QAAQ,CAACC,EAAmBC,KACnCJ,EAAG9B,KAAK,KAAMiC,EAASC,KAAWH,KAInCD,EAmHdP,EAAA,QArGGY,YAAYC,GACR3C,KAAK4C,cAAgBD,EAErB3C,KAAK6C,QAAU7C,KAAK8C,mBACpB9C,KAAK+C,OAAS/C,KAAK4C,cAAcG,OACjC/C,KAAKgD,gBAGFN,QACH,OAAO,IAAIV,EAAA,EAAMhC,KAAK2C,QAAS3C,KAAK+C,QAGjCL,WAAWd,KAAgBU,GAC9B,OACII,CAACO,EAAA,IAAc,EACfrB,MACAU,SAAUA,IAIXI,UAAUQ,GACb,OAAOA,EAAWC,IAAKC,KAEfV,CAACO,EAAA,IAAc,EACfrB,IAAKwB,EAAExB,IACPU,SAAUc,EAAEd,SAKhBI,gBACJ,MAAMW,KACAC,EAAuBxC,OAAOyC,KAAKhD,KACrC,KACAP,KAAK4C,cAAcD,aAEjBa,EAAwB1C,OAAOyC,KAAKhD,KACtC,KACAP,KAAK4C,cAActC,aAGvB,IAAK,MAAMF,KAAKkD,EACZD,EAAcjD,GAAK+B,EACfnC,KAAK6C,QAAQY,OAAOvB,YACpBlC,KAAK4C,cAAcD,QAAQvC,IAInC,IAAK,MAAMA,KAAKoD,EAAa,CACzB,MAAME,KACAC,EAAoB7C,OAAOyC,KAAKhD,KAClC,KACAP,KAAK4C,cAActC,QAAQF,GAAGuC,aAElC,IAAK,MAAMiB,KAAKD,EACZD,EAAWE,GAAKzB,EACZnC,KAAK6C,QAAQvC,QAAQF,GAAG8B,YACHlC,KAAK4C,cAActC,QAAQF,GAAGuC,QAC/CiB,IAIZP,EAAcjD,GAAKsD,EAGvB1D,KAAK2C,QAAUU,EAGXX,mBACJ,MAAMmB,GACFJ,OAAQxB,EACR3B,YAEEiD,EAAiBzC,OAAOyC,KAAKhD,KAC/B,KACAP,KAAK4C,cAAca,YAEjBD,EAAwB1C,OAAOyC,KAAKhD,KACtC,KACAP,KAAK4C,cAActC,aAGvBiD,EAAKJ,IAAKC,IACNS,EAAUJ,OAAOL,GAAKpD,KAAK4C,cAAca,OAAOL,KAGpD,IAAK,MAAMhD,KAAKoD,EAAa,CACzBK,EAAUvD,QAAQF,GAAEU,OAAAgD,UAAQD,EAAUJ,QACtC,MAAME,EAAoB7C,OAAOyC,KAAKhD,KAClC,KACAP,KAAK4C,cAActC,QAAQF,GAAGqD,YAElC,IAAK,MAAMG,KAAKD,EACZE,EAAUvD,QAAQF,GAAGwD,GAAe5D,KAAK4C,cAActC,QACnDF,GACFqD,OAAQG,GAIlB,OAAOC,oDCxLfE,EAAA7D,EAAA,GA4BA,MAAM8D,EAAyBZ,KACpBtC,OAAAmD,EAAA,EAAAnD,CAASsC,IAAK,YAAaA,EAGhCc,EAAoBd,GACfY,EAAYZ,GAAkBA,EAAGe,QAAkBf,EAOxDgB,EAAuB,CAACxC,EAAee,IACrC7B,OAAAmD,EAAA,EAAAnD,CAAQc,GAEsBA,EAAKyC,OAC1BjB,KACKtC,OAAAiD,EAAA,EAAAjD,CAAqBoD,EAAOd,GAAIT,IACxC2B,SAAqC1C,EAAK0C,SAGvCxD,OAAAiD,EAAA,EAAAjD,CAA6Bc,EAAKe,GAI7C4B,EAAmB,CACrB3C,EACAe,EACAL,IAEOV,EAAIuB,IAAKC,GACZtC,OAAAiD,EAAA,EAAAjD,CAAqBoD,EAAOd,GAAIT,EAAhC7B,IAvBkB,CAACsC,GAChBY,EAAYZ,GAAkBA,EAAGd,QAsBQkC,CAAQpB,MAAOd,IAmJlER,EAAA,QAnIGY,YAAYC,EAAmBI,GAC3B/C,KAAK2C,QAAUA,EACf3C,KAAKyE,cACLzE,KAAK0E,YACL1E,KAAK2E,UAAY5B,EAGdL,OAAOd,KAAkBU,GAC5B,IAAK8B,EAAWxC,EAAK5B,KAAK2C,SACtB,MAAM,IAAIiC,8BAA8BhD,cAG5C,GAAI5B,KAAK6E,UACL7E,KAAK0E,SAASI,MACVlD,MACAU,aAED,CACH,IAAIyC,EAQJ,GANIA,EADAjE,OAAAmD,EAAA,EAAAnD,CAAQc,GACAW,QAAQyC,IAAIT,EAAO3C,EAAK5B,KAAK2C,YAAaL,KAE1CxB,OAAAiD,EAAA,EAAAjD,CAA6Bc,EAAK5B,KAAK2C,QAAvC7B,IACDwB,IAGNxB,OAAAmD,EAAA,EAAAnD,CAAUiE,GACX,MAAM,IAAIH,aACChD,4CAGf5B,KAAK6E,UAAYE,EACjB/E,KAAK6E,UAAUI,KACVC,IACGlF,KAAKmF,YAAYD,IAEpBE,IACOpF,KAAKyC,SACLzC,KAAK6E,UAAY,KACjB7E,KAAKyC,OAAO2C,MAM5B,OAAOpF,KAGJ0C,KAAKF,EAAmBC,GAU3B,OATIzC,KAAK6E,UACL7E,KAAK0E,SAASI,MACVtC,UACAC,WAGJzC,KAAKqF,cAAe7C,UAASC,WAG1BzC,KAGJ0C,OAAOF,EAAmBC,GAI7B,OAHAzC,KAAKwC,QAAUA,EACfxC,KAAKyC,OAASA,EAEPzC,KAIJ0C,MAAMD,GAGT,OAFAzC,KAAKyC,OAASA,EAEPzC,KAIJ0C,OAAOd,KAAgBU,GAC1B,OAAOtC,KAAK2E,UAAU/C,GAAKrB,KAAK,KAAMP,QAASsC,GAG3CI,YAAYwC,GAEhB,GADAlF,KAAKyE,WAAWK,KAAKI,GACjBlF,KAAK0E,SAASJ,OAAQ,CACtB,MAAMgB,EAAyBtF,KAAK0E,SAASa,QAC7CvF,KAAK6E,UAAY,KACb,QAASS,EAETtF,KAAKwF,OAAOF,EAAO1D,OAAQ0D,EAAOhD,KAAM4C,GAGxClF,KAAKqF,aAAaC,EAAQJ,QAG1BlF,KAAKwC,SACLxC,KAAKwC,QAAQxC,KAAKyE,YAKtB/B,aAAauC,EAAaC,GAC9B,MAAML,EAAiBI,EAAKzC,QAAQ0C,GACpC,GAAIpE,OAAAmD,EAAA,EAAAnD,CAAU+D,GAEVA,EAAUI,KACLQ,IACGzF,KAAKmF,YAAYM,IAEpBL,IACOpF,KAAKyC,QACLzC,KAAKyC,OAAO2C,UAIrB,GAAItE,OAAAmD,EAAA,EAAAnD,CAAQ+D,GAAY,CAE3B,MAAMa,EAAqBb,EAAU1B,IAAKC,KAElCe,QAASf,EAAExB,IACXU,KAAMc,EAAEd,QAGhBtC,KAAKwF,OAAOE,QACLb,EAAU5B,EAAA,GAEjBjD,KAAKwF,OAAOX,EAAUjD,OAAQiD,EAAUvC,MAExCtC,KAAKmF,YAAYN,GAGrB,OAAO7E,qCCpMb8B,EAAA,EAF+B,CAAC6D,GACiB,mBAAxC7E,OAAOS,UAAUqE,SAASrF,KAAKoF,IAKxC7D,EAAA,EAFgC,CAAC6D,GACgB,oBAAxC7E,OAAOS,UAAUqE,SAASrF,KAAKoF,IAYxC7D,EAAA,EANiC,CAAC6D,IAChC,IACI,MAA2B,mBAAbA,EAAIV,KACpB,MAAOY,GACL,OAAO,mCCIb/D,EAAA,EAlB4C,EAC1CF,EACAe,KAEA,IAAImD,EAAgCnD,GACV,IAAtBf,EAAImE,QAAQ,KACWnE,EAAIoE,MAAM,KAC5B7C,IAAKC,IACA0C,aAAoBG,WACtBH,EAAWA,EAAS1C,MAI5B0C,EAAWA,EAASlE,GAExB,GAAIkE,aAAoBG,SACpB,OAAOH","file":"request-model.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"request-model\"] = factory();\n\telse\n\t\troot[\"request-model\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 939e4d80ca1e042c0fc8","/**\n * @desciption conf\n */\n\nexport const commitToken: symbol | string = ((): symbol | string => {\n    const key: string = '__REQUEST__MODEL__COMMIT__TOKEN';\n    if (Symbol) {\n        return Symbol(key);\n    } else {\n        return key;\n    }\n})();\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/conf.ts","import Request from 'Request/request.ts';\n\nexport default Request;\n// module.exports = Request;\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","/*\n * @description request.ts\n */\n\nimport { commitToken } from 'Lib/conf';\nimport logger from 'Lib/logger';\nimport Chain from 'Request/chain';\n\n// tslint:disable no-any no-unsafe-any\n\nexport interface IRequest {\n    [key: string]: Function | IRequest;\n}\n\ninterface IModule {\n    [key: string]: IRequestConfig;\n}\n\nexport interface IAction {\n    [key: string]: Function;\n}\n\ninterface IConfig {\n    promiseWrap?: boolean;\n    [key: string]: boolean;\n}\n\nexport interface IcommitWrap {\n    key: string;\n    args: any[];\n}\n\nexport interface IRequestConfig {\n    request: IRequest;\n    modules?: IModule;\n    config?: IConfig;\n    action?: IAction;\n}\n\ninterface IoutputRequest {\n    request: IRequest;\n}\n\ninterface IrequestConfig {\n    config: IConfig;\n    modules?: {\n        [key: string]: IConfig;\n    };\n}\n\nconst defaultConfig: IConfig = {\n    promiseWrap: false,\n};\n\n// export interface IcommitWrap {\n//     [commitToken]: boolean;\n//     key: string;\n//     args: any[];\n// }\n\nconst formatFunctionToPromise: Function = (\n    flag: boolean,\n    fn: Function,\n): Function => {\n    if (flag) {\n        return (...args: any[]): Promise<any> => {\n            return new Promise((resolve: Function, reject: Function): any => {\n                fn.call(null, resolve, reject, ...args);\n            });\n        };\n    } else {\n        return fn;\n    }\n};\n\n/**\n * class Request\n */\nexport default class Request {\n    public request: IRequest;\n\n    private requestConfig: IRequestConfig;\n    private setting: IrequestConfig;\n    private action: IAction;\n\n    constructor(request: IRequestConfig) {\n        this.requestConfig = request;\n\n        this.setting = this.getRequestConfig();\n        this.action = this.requestConfig.action;\n        this.requestFormat();\n    }\n\n    public chain(): Chain {\n        return new Chain(this.request, this.action);\n    }\n\n    public commitWrap(key: string, ...args: any[]): object {\n        return {\n            [commitToken]: true,\n            key,\n            args: [...args],\n        };\n    }\n\n    public commitAll(commitWrap: IcommitWrap[]): object[] {\n        return commitWrap.map((v: IcommitWrap): object => {\n            return {\n                [commitToken]: true,\n                key: v.key,\n                args: [...v.args],\n            };\n        });\n    }\n\n    private requestFormat(): void {\n        const outputRequest: IRequest = {};\n        const requestKes: string[] = Object.keys.call(\n            null,\n            this.requestConfig.request || {},\n        );\n        const modulesKeys: string[] = Object.keys.call(\n            null,\n            this.requestConfig.modules || {},\n        );\n\n        for (const i of requestKes) {\n            outputRequest[i] = formatFunctionToPromise(\n                this.setting.config.promiseWrap,\n                this.requestConfig.request[i],\n            );\n        }\n\n        for (const i of modulesKeys) {\n            const tmpRequest: IRequest = {};\n            const tmpKeys: string[] = Object.keys.call(\n                null,\n                this.requestConfig.modules[i].request || {},\n            );\n            for (const j of tmpKeys) {\n                tmpRequest[j] = formatFunctionToPromise(\n                    this.setting.modules[i].promiseWrap,\n                    <Function>(<IRequest>this.requestConfig.modules[i].request)[\n                        j\n                    ],\n                );\n            }\n            outputRequest[i] = tmpRequest;\n        }\n\n        this.request = outputRequest;\n    }\n\n    private getRequestConfig(): IrequestConfig {\n        const tmpConfig: IrequestConfig = {\n            config: defaultConfig,\n            modules: {},\n        };\n        const keys: string[] = Object.keys.call(\n            null,\n            this.requestConfig.config || {},\n        );\n        const modulesKeys: string[] = Object.keys.call(\n            null,\n            this.requestConfig.modules || {},\n        );\n\n        keys.map((v: string): void => {\n            tmpConfig.config[v] = this.requestConfig.config[v];\n        });\n\n        for (const i of modulesKeys) {\n            tmpConfig.modules[i] = { ...tmpConfig.config };\n            const tmpKeys: string[] = Object.keys.call(\n                null,\n                this.requestConfig.modules[i].config || {},\n            );\n            for (const j of tmpKeys) {\n                tmpConfig.modules[i][j] = (<IConfig>this.requestConfig.modules[\n                    i\n                ].config)[j];\n            }\n        }\n\n        return tmpConfig;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/request/request.ts","/**\n * @description chain\n */\nimport { commitToken } from 'Lib/conf';\nimport { isArray, isObject, isPromise } from 'Lib/help';\nimport { getFunctionInRequest } from 'Request/data';\nimport { IAction, IRequest, IcommitWrap } from 'Request/request';\n\n// tslint:disable no-any no-unsafe-any\n\ninterface Idefer {\n    key: deferKey;\n    args: any[];\n}\n\ntype deferKey = string | string[] | IcommitObj[];\ntype deferKeyItem = string | IcommitObj;\n\ninterface Ithen {\n    resolve: Function;\n    reject: Function;\n}\n\ninterface IcommitObj {\n    handler: string;\n    args: any[];\n}\n\nconst isCommitObj: Function = (v: any): boolean => {\n    return isObject(v) ? 'handler' in v : false;\n};\n\nconst getKey: Function = (v: deferKeyItem): string => {\n    return isCommitObj(v) ? (<IcommitObj>v).handler : <string>v;\n};\n\nconst getArgs: Function = (v: deferKeyItem): any[] => {\n    return isCommitObj(v) ? (<IcommitObj>v).args : [];\n};\n\nconst hasRequest: Function = (key: deferKey, request: IRequest): boolean => {\n    if (isArray(key)) {\n        return (\n            (<(string | IcommitObj)[]>key).filter(\n                (v: string | IcommitObj): boolean =>\n                    !!getFunctionInRequest(getKey(v), request),\n            ).length === (<(string | IcommitObj)[]>key).length\n        );\n    } else {\n        return !!getFunctionInRequest(<string>key, request);\n    }\n};\n\nconst getAll: Function = (\n    key: (string | IcommitObj)[],\n    request: IRequest,\n    args: any[],\n): Function[] => {\n    return key.map((v: string | IcommitObj): Function =>\n        getFunctionInRequest(getKey(v), request)(...getArgs(v), ...args),\n    );\n};\n\n/**\n * default class Chain\n */\nexport default class Chain {\n    private request: IRequest;\n    private actionFun: IAction;\n    private deferItem: Promise<any> | null;\n    private waitList: (Idefer | Ithen)[];\n    private resultList: any[];\n    private resolve: Function;\n    private reject: Function;\n\n    constructor(request: IRequest, action: IAction) {\n        this.request = request;\n        this.resultList = [];\n        this.waitList = [];\n        this.actionFun = action;\n    }\n\n    public commit(key: deferKey, ...args: any[]): Chain {\n        if (!hasRequest(key, this.request)) {\n            throw new Error(`can not find matched ${key} function`);\n        }\n\n        if (this.deferItem) {\n            this.waitList.push({\n                key,\n                args,\n            });\n        } else {\n            let defer: Promise<any>;\n            if (isArray(key)) {\n                defer = Promise.all(getAll(key, this.request, [...args]));\n            } else {\n                defer = getFunctionInRequest(<string>key, this.request)(\n                    ...args,\n                );\n            }\n            if (!isPromise(defer)) {\n                throw new Error(\n                    `The ${key} function not return a Promise function`,\n                );\n            }\n            this.deferItem = defer;\n            this.deferItem.then(\n                (result: any) => {\n                    this.commitChain(result);\n                },\n                (error: any) => {\n                    if (this.reject) {\n                        this.deferItem = null;\n                        this.reject(error);\n                    }\n                },\n            );\n        }\n\n        return this;\n    }\n\n    public then(resolve: Function, reject: Function): Chain {\n        if (this.deferItem) {\n            this.waitList.push({\n                resolve,\n                reject,\n            });\n        } else {\n            this.innerResolve({ resolve, reject });\n        }\n\n        return this;\n    }\n\n    public finish(resolve: Function, reject: Function): Chain {\n        this.resolve = resolve;\n        this.reject = reject;\n\n        return this;\n    }\n\n    // tslint:disable no-reserved-keywords\n    public catch(reject: Function): Chain {\n        this.reject = reject;\n\n        return this;\n    }\n    // tslint:enable no-reserved-keywords\n\n    public action(key: string, ...args: any[]): Chain {\n        return this.actionFun[key].call(null, this, ...args);\n    }\n\n    private commitChain(result: any): void {\n        this.resultList.push(result);\n        if (this.waitList.length) {\n            const keyObj: Idefer | Ithen = this.waitList.shift();\n            this.deferItem = null;\n            if ('key' in keyObj) {\n                // object Idefer\n                this.commit(keyObj.key, ...keyObj.args, result);\n            } else {\n                // object Ithen\n                this.innerResolve(keyObj, result);\n            }\n        } else {\n            if (this.resolve) {\n                this.resolve(this.resultList);\n            }\n        }\n    }\n\n    private innerResolve(then: Ithen, result?: any): Chain {\n        const deferItem: any = then.resolve(result);\n        if (isPromise(deferItem)) {\n            // object Promise\n            deferItem.then(\n                (data: any) => {\n                    this.commitChain(data);\n                },\n                (error: any) => {\n                    if (this.reject) {\n                        this.reject(error);\n                    }\n                },\n            );\n        } else if (isArray(deferItem)) {\n            // 暂时可以认为一定是 commitAll 包装\n            const item: IcommitObj[] = deferItem.map((v: IcommitWrap) => {\n                return {\n                    handler: v.key,\n                    args: v.args,\n                };\n            });\n            this.commit(item);\n        } else if (deferItem[commitToken]) {\n            // another commit\n            this.commit(deferItem.key, ...deferItem.args);\n        } else {\n            this.commitChain(deferItem);\n        }\n\n        return this;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/request/chain.ts","/**\n * @description help\n */\n\n// tslint:disable no-any no-unsafe-any\n\nexport const isArray: Function = (obj: any): boolean => {\n    return Object.prototype.toString.call(obj) === '[object Array]';\n};\n\nexport const isObject: Function = (obj: any): boolean => {\n    return Object.prototype.toString.call(obj) === '[object Object]';\n};\nexport const isFunction: Function = (obj: any): obj is Function => {\n    return Function.prototype.toString.call(obj) === '[object Function]';\n};\n\nexport const isPromise: Function = (obj: any): boolean => {\n    try {\n        return typeof obj.then === 'function';\n    } catch (e) {\n        return false;\n    }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/help.ts","/**\n * @description help to find data in Request\n */\nimport { IRequest } from 'Request/request';\n\ntype Iresult = Function | undefined;\n\nexport const getFunctionInRequest: Function = (\n    key: string,\n    request: IRequest,\n): Iresult => {\n    let iRequest: IRequest | Function = request;\n    if (key.indexOf('/') !== -1) {\n        const keys: string[] = key.split('/');\n        keys.map((v: string): void => {\n            if (!(iRequest instanceof Function)) {\n                iRequest = iRequest[v];\n            }\n        });\n    } else {\n        iRequest = iRequest[key];\n    }\n    if (iRequest instanceof Function) {\n        return iRequest;\n    }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/request/data.ts"],"sourceRoot":""}