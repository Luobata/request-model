{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 20cc58accecfba4b5b57","webpack:///./src/lib/conf.ts","webpack:///./src/index.js","webpack:///./src/request/request.ts","webpack:///./src/request/chain.ts","webpack:///./src/lib/help.ts","webpack:///./src/request/data.ts"],"names":["root","factory","exports","module","define","amd","self","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","commitToken","key","Symbol","__webpack_exports__","__WEBPACK_IMPORTED_MODULE_0_Request_request_ts__","__WEBPACK_IMPORTED_MODULE_1_Request_chain__","defaultConfig","promiseWrap","formatFunctionToPromise","flag","fn","args","Promise","resolve","reject","[object Object]","request","requestConfig","setting","getRequestConfig","action","requestFormat","__WEBPACK_IMPORTED_MODULE_0_Lib_conf__","commitWrap","map","v","outputRequest","requestKes","keys","modulesKeys","config","loopRequest","mKeys","pModule","resultRequest","tmpRequest","tmpKeys","j","subModules","length","tmpConfig","loopModules","modulesKey","pModules","assign","__WEBPACK_IMPORTED_MODULE_2_Request_data__","isIdefer","undefined","isCommitObj","__WEBPACK_IMPORTED_MODULE_1_Lib_help__","getKey","handler","hasRequest","filter","join","getAll","getArgs","noop","resultList","waitList","actionFun","unResolveRejection","keyStr","Error","deferItem","push","defer","all","then","result","commitChain","error","innerRejection","innerResolve","finish","always","alwaysFn","keyObj","shift","commit","innerAlways","e","data","item","index","splice","obj","toString","iRequest","indexOf","split"],"mappings":"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","file":"request-model.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"request-model\"] = factory();\n\telse\n\t\troot[\"request-model\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 20cc58accecfba4b5b57","/**\n * @desciption conf\n */\n\nexport const commitToken: symbol | string = ((): symbol | string => {\n    const key: string = '__REQUEST__MODEL__COMMIT__TOKEN';\n    if (Symbol) {\n        return Symbol(key);\n    } else {\n        return key;\n    }\n})();\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/conf.ts","import Request from 'Request/request.ts';\n\nexport default Request;\n// module.exports = Request;\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","/*\n * @description request.ts\n */\n\nimport { commitToken } from 'Lib/conf';\nimport logger from 'Lib/logger';\nimport Chain from 'Request/chain';\n\n// tslint:disable no-any no-unsafe-any\n\n// export interface IRequest {\n//     [key: string]: Function | IRequest;\n// }\nexport interface IRequest {\n    request: {\n        [key: string]: Function;\n    };\n    modules: {\n        [key: string]: IRequest;\n    };\n}\n\nexport interface Irequest {\n    [key: string]: Function;\n}\n\ninterface IModule {\n    [key: string]: IRequestConfig;\n}\n\nexport interface IAction {\n    [key: string]: Function;\n}\n\ninterface IConfig {\n    promiseWrap?: boolean;\n    [key: string]: boolean;\n}\n\nexport interface IcommitWrap {\n    key: string;\n    args: any[];\n}\n\nexport interface IRequestConfig {\n    request: Irequest;\n    modules?: IModule;\n    config?: IConfig;\n    action?: IAction;\n}\n\ninterface IoutputRequest {\n    request: IRequest;\n}\n\ninterface IrequestConfig {\n    config: IConfig;\n    modules: {\n        [key: string]: IrequestConfig;\n    };\n}\n\nconst defaultConfig: IConfig = {\n    promiseWrap: false,\n};\n\n// export interface IcommitWrap {\n//     [commitToken]: boolean;\n//     key: string;\n//     args: any[];\n// }\n\n// tslint:disable promise-function-async\nconst formatFunctionToPromise: Function = (\n    flag: boolean,\n    fn: Function,\n): Function => {\n    if (flag) {\n        return (...args: any[]): Promise<any> => {\n            return new Promise(\n                (resolve: Function, reject: Function): any => {\n                    fn.call(null, resolve, reject, ...args);\n                },\n            );\n        };\n    } else {\n        return fn;\n    }\n};\n// tslint:enable promise-function-async\n\n/**\n * class Request\n */\nexport default class Request {\n    public request: IRequest;\n\n    private requestConfig: IRequestConfig;\n    private setting: IrequestConfig;\n    private action: IAction;\n\n    constructor(request: IRequestConfig) {\n        this.requestConfig = request;\n\n        this.setting = this.getRequestConfig();\n        this.action = this.requestConfig.action;\n        this.requestFormat();\n    }\n\n    public chain(): Chain {\n        return new Chain(this.request, this.action);\n    }\n\n    public commitWrap(key: string, ...args: any[]): object {\n        return {\n            [commitToken]: true,\n            key,\n            args: [...args],\n        };\n    }\n\n    public commitAll(commitWrap: IcommitWrap[]): object[] {\n        return commitWrap.map(\n            (v: IcommitWrap): object => {\n                return {\n                    [commitToken]: true,\n                    key: v.key,\n                    args: [...v.args],\n                };\n            },\n        );\n    }\n\n    private requestFormat(): void {\n        const outputRequest: IRequest = {\n            request: {},\n            modules: {},\n        };\n        const requestKes: string[] = Object.keys.call(\n            null,\n            this.requestConfig.request || {},\n        );\n        const modulesKeys: string[] = Object.keys.call(\n            null,\n            this.requestConfig.modules || {},\n        );\n\n        for (const i of requestKes) {\n            outputRequest.request[i] = formatFunctionToPromise(\n                this.setting.config.promiseWrap,\n                this.requestConfig.request[i],\n            );\n        }\n\n        const loopRequest: Function = (\n            mKeys: string[],\n            setting: IrequestConfig,\n            pModule: IModule,\n            resultRequest: IRequest,\n        ): void => {\n            for (const i of mKeys) {\n                const tmpRequest: IRequest = {\n                    request: {},\n                    modules: {},\n                };\n                const tmpKeys: string[] = Object.keys.call(\n                    null,\n                    pModule[i].request || {},\n                );\n                for (const j of tmpKeys) {\n                    tmpRequest.request[j] = formatFunctionToPromise(\n                        setting.modules[i].config.promiseWrap,\n                        <Function>pModule[i].request[j],\n                    );\n                }\n                resultRequest.modules[i] = tmpRequest;\n\n                const subModules: string[] = Object.keys.call(\n                    null,\n                    pModule[i].modules || {},\n                );\n                if (subModules.length) {\n                    loopRequest(\n                        subModules,\n                        setting.modules[i],\n                        pModule[i].modules,\n                        resultRequest.modules[i],\n                    );\n                }\n            }\n        };\n        loopRequest(\n            modulesKeys,\n            this.setting,\n            this.requestConfig.modules,\n            outputRequest,\n        );\n\n        this.request = outputRequest;\n    }\n\n    private getRequestConfig(): IrequestConfig {\n        const tmpConfig: IrequestConfig = {\n            config: defaultConfig,\n            modules: {},\n        };\n        const keys: string[] = Object.keys.call(\n            null,\n            this.requestConfig.config || {},\n        );\n        const modulesKeys: string[] = Object.keys.call(\n            null,\n            this.requestConfig.modules || {},\n        );\n\n        keys.map(\n            (v: string): void => {\n                tmpConfig.config[v] = this.requestConfig.config[v];\n            },\n        );\n\n        const loopModules: Function = (\n            modulesKey: string[],\n            modules: IModule,\n            pModules: IrequestConfig,\n        ): void => {\n            for (const i of modulesKey) {\n                pModules.modules[i] = {\n                    config: { ...pModules.config },\n                    modules: {},\n                };\n                const tmpKeys: string[] = Object.keys.call(\n                    null,\n                    modules[i].config || {},\n                );\n                for (const j of tmpKeys) {\n                    pModules.modules[i].config[j] = modules[i].config[j];\n                }\n\n                // 如果还有子module 循环\n                const subModules: string[] = Object.keys.call(\n                    null,\n                    modules[i].modules || {},\n                );\n                if (subModules.length) {\n                    loopModules(\n                        subModules,\n                        modules[i].modules,\n                        pModules.modules[i],\n                    );\n                }\n            }\n        };\n        loopModules(modulesKeys, this.requestConfig.modules, tmpConfig);\n\n        return tmpConfig;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/request/request.ts","/**\n * @description chain\n */\nimport { commitToken } from 'Lib/conf';\nimport { isArray, isObject, isPromise } from 'Lib/help';\nimport { getFunctionInRequest } from 'Request/data';\nimport { IAction, IcommitWrap, IRequest } from 'Request/request';\n\n// tslint:disable no-any no-unsafe-any\n\ninterface Idefer {\n    key: deferKey;\n    args: any[];\n}\n\ntype deferKey = string | string[] | IcommitObj[];\ntype deferKeyItem = string | IcommitObj;\n\ninterface Ithen {\n    resolve: Function;\n    reject: Function;\n}\n\ninterface IcommitObj {\n    handler: string;\n    args: any[];\n}\n\nfunction isIdefer(v: any): v is Idefer {\n    return v.key !== undefined;\n}\nconst isCommitObj: Function = (v: any): boolean => {\n    return isObject(v) ? 'handler' in v : false;\n};\n\nconst getKey: Function = (v: deferKeyItem): string => {\n    return isCommitObj(v) ? (<IcommitObj>v).handler : <string>v;\n};\n\nconst getArgs: Function = (v: deferKeyItem): any[] => {\n    return isCommitObj(v) ? (<IcommitObj>v).args : [];\n};\n\nconst hasRequest: Function = (key: deferKey, request: IRequest): string => {\n    if (isArray(key)) {\n        // (<(string | IcommitObj)[]>key).filter(\n        //     (v: string | IcommitObj): boolean =>\n        //         !!getFunctionInRequest(getKey(v), request),\n        // ).length === (<(string | IcommitObj)[]>key).length\n        const keys: (string | IcommitObj)[] = (<(string | IcommitObj)[]>(\n            key\n        )).filter(\n            (v: string | IcommitObj): boolean =>\n                !getFunctionInRequest(getKey(v), request),\n        );\n\n        return keys.length\n            ? keys.map((v: IcommitObj) => (v.handler ? v.handler : v)).join(',')\n            : '';\n    } else {\n        return getFunctionInRequest(<string>key, request) ? '' : <string>key;\n        // return !!getFunctionInRequest(<string>key, request);\n    }\n};\n\nconst getAll: Function = (\n    key: (string | IcommitObj)[],\n    request: IRequest,\n    args: any[],\n): Function[] => {\n    return key.map(\n        (v: string | IcommitObj): Function =>\n            getFunctionInRequest(getKey(v), request)(...getArgs(v), ...args),\n    );\n};\n\n// tslint:disable-next-line no-empty\nconst noop: Function = (): void => {};\n\n/**\n * default class Chain\n */\nexport default class Chain {\n    private request: IRequest;\n    private actionFun: IAction;\n    private deferItem: Promise<any> | null;\n    private waitList: (Idefer | Ithen)[];\n    private resultList: any[];\n    private resolve: Function;\n    private reject: Function;\n    private alwaysFn: Function;\n    private unResolveRejection: any;\n\n    constructor(request: IRequest, action: IAction) {\n        this.request = request;\n        this.resultList = [];\n        this.waitList = [];\n        this.actionFun = action;\n    }\n\n    public commit(key: deferKey, ...args: any[]): Chain {\n        if (this.unResolveRejection) {\n            return this;\n        }\n        const keyStr: string = hasRequest(key, this.request);\n        if (keyStr) {\n            throw new Error(`can not find matched commit key: ${keyStr}`);\n        }\n\n        if (this.deferItem) {\n            this.waitList.push({\n                key,\n                args,\n            });\n        } else {\n            let defer: Promise<any>;\n            if (isArray(key)) {\n                defer = Promise.all(getAll(key, this.request, [...args]));\n            } else {\n                defer = getFunctionInRequest(<string>key, this.request)(\n                    ...args,\n                );\n            }\n            if (!isPromise(defer)) {\n                throw new Error(\n                    `The ${key} function not return a Promise function`,\n                );\n            }\n            // call entry one\n            this.deferItem = defer;\n            this.deferItem.then(\n                (result: any) => {\n                    this.commitChain(result);\n                },\n                (error: any) => {\n                    this.innerRejection(error);\n                },\n            );\n        }\n\n        return this;\n    }\n\n    public then(resolve: Function, reject?: Function): Chain {\n        if (this.deferItem) {\n            this.waitList.push({\n                resolve,\n                reject,\n            });\n        } else {\n            this.innerResolve({ resolve, reject });\n        }\n\n        return this;\n    }\n\n    public finish(resolve: Function, reject?: Function): Chain {\n        if (!this.waitList.length && !this.deferItem) {\n            this.innerResolve({ resolve, reject });\n        } else {\n            this.resolve = resolve;\n            this.reject = reject;\n        }\n\n        return this;\n    }\n\n    // tslint:disable-next-line no-reserved-keywords\n    public finally(resolve: Function, reject?: Function): Chain {\n        return this.finish(resolve, reject);\n    }\n\n    // tslint:disable-next-line no-reserved-keywords\n    public catch(reject: Function): Chain {\n        if (!this.waitList.length && !this.deferItem) {\n            this.innerResolve({ resolve: noop, reject });\n        } else {\n            this.reject = reject;\n        }\n\n        return this;\n    }\n\n    public always(always: Function): Chain {\n        this.alwaysFn = always;\n\n        return this;\n    }\n\n    public action(key: string, ...args: any[]): Chain {\n        return this.actionFun[key].call(null, this, ...args);\n    }\n\n    private commitChain(result: any): void {\n        this.resultList.push(result);\n        if (this.waitList.length) {\n            const keyObj: Idefer | Ithen = this.waitList.shift();\n            this.deferItem = null;\n            if (isIdefer(keyObj)) {\n                // object Idefer\n                this.commit(keyObj.key, ...keyObj.args, result);\n            } else {\n                // object Ithen\n                this.innerResolve(keyObj, result);\n            }\n        } else {\n            if (this.resolve) {\n                this.resolve(this.resultList);\n            }\n\n            this.innerAlways();\n        }\n    }\n\n    private innerResolve(then: Ithen, result?: any): Chain {\n        // call entry two\n        let deferItem: any;\n        if (this.unResolveRejection) {\n            if (then.reject) {\n                then.reject(this.unResolveRejection);\n                this.unResolveRejection = null;\n            } else if (this.innerRejection(this.unResolveRejection)) {\n                this.unResolveRejection = null;\n            }\n\n            return this;\n        } else {\n            try {\n                deferItem = then.resolve(result);\n            } catch (e) {\n                if (!this.innerRejection(e)) {\n                    this.unResolveRejection = e;\n                }\n\n                return this;\n            }\n        }\n        if (isPromise(deferItem)) {\n            // object Promise\n            this.deferItem = deferItem;\n            deferItem.then(\n                (data: any) => {\n                    this.commitChain(data);\n                },\n                (error: any) => {\n                    this.innerRejection(error);\n                },\n            );\n        } else if (isArray(deferItem)) {\n            // 暂时可以认为一定是 commitAll 包装\n            const item: IcommitObj[] = deferItem.map((v: IcommitWrap) => {\n                return {\n                    handler: v.key,\n                    args: v.args,\n                };\n            });\n            this.commit(item);\n        } else if (deferItem !== undefined && deferItem[commitToken]) {\n            // another commit\n            this.commit(deferItem.key, ...deferItem.args);\n        } else {\n            this.commitChain(deferItem);\n        }\n\n        return this;\n    }\n\n    private innerRejection(error: any, fn?: Function): boolean {\n        let reject!: Function;\n        // if (this.waitList.length && !isIdefer(this.waitList[0])) {\n        if (this.waitList.length) {\n            let index: number = 0;\n            for (let i: number = 0; i < this.waitList.length; i = i + 1) {\n                if (\n                    !isIdefer(this.waitList[i]) &&\n                    (<Ithen>this.waitList[i]).reject\n                ) {\n                    reject = (<Ithen>this.waitList[i]).reject;\n                    index = i;\n                    break;\n                }\n            }\n            this.waitList.splice(0, index);\n        }\n        if (!reject && this.reject) {\n            reject = this.reject;\n        }\n        if (reject) {\n            if (fn) {\n                fn();\n            }\n            this.deferItem = null;\n            reject(error);\n            this.innerAlways();\n\n            return true;\n        } else {\n            this.innerAlways();\n\n            return false;\n        }\n    }\n\n    private innerAlways(): void {\n        if (this.alwaysFn) {\n            this.alwaysFn();\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/request/chain.ts","/**\n * @description help\n */\n\n// tslint:disable no-any no-unsafe-any\n\nexport const isArray: Function = (obj: any): boolean => {\n    return Object.prototype.toString.call(obj) === '[object Array]';\n};\n\nexport const isObject: Function = (obj: any): boolean => {\n    return Object.prototype.toString.call(obj) === '[object Object]';\n};\nexport const isFunction: Function = (obj: any): obj is Function => {\n    return Function.prototype.toString.call(obj) === '[object Function]';\n};\n\nexport const isPromise: Function = (obj: any): boolean => {\n    try {\n        return typeof obj.then === 'function';\n    } catch (e) {\n        return false;\n    }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/help.ts","/**\n * @description help to find data in Request\n */\nimport { IRequest } from 'Request/request';\n\ntype Iresult = Function | undefined;\n\nexport const getFunctionInRequest: Function = (\n    key: string,\n    request: IRequest,\n): Iresult => {\n    let iRequest: IRequest = request;\n    let result: Function;\n    try {\n        if (key.indexOf('/') !== -1) {\n            const keys: string[] = key.split('/');\n            keys.map(\n                (v: string, i: number): void => {\n                    if (i !== keys.length - 1) {\n                        iRequest = iRequest.modules[v];\n                    } else {\n                        result = iRequest.request[v];\n                    }\n                },\n            );\n        } else {\n            result = iRequest.request[key];\n        }\n    } catch (e) {}\n\n    return result;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/request/data.ts"],"sourceRoot":""}