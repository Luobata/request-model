{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap fa2a1948a6e42af5badc","webpack:///./src/lib/conf.ts","webpack:///./src/index.js","webpack:///./src/request/request.ts","webpack:///./src/request/chain.ts","webpack:///./src/lib/help.ts","webpack:///./src/request/data.ts"],"names":["root","factory","exports","module","define","amd","self","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","commitToken","key","Symbol","__webpack_exports__","__WEBPACK_IMPORTED_MODULE_0_Request_request_ts__","__WEBPACK_IMPORTED_MODULE_1_Request_chain__","defaultConfig","promiseWrap","formatFunctionToPromise","flag","fn","args","Promise","resolve","reject","[object Object]","request","requestConfig","setting","getRequestConfig","console","log","action","requestFormat","__WEBPACK_IMPORTED_MODULE_0_Lib_conf__","commitWrap","map","v","outputRequest","requestKes","keys","modulesKeys","config","loopRequest","mKeys","pModule","resultRequest","tmpRequest","tmpKeys","j","subModules","length","tmpConfig","loopModules","pModules","assign","__WEBPACK_IMPORTED_MODULE_2_Request_data__","isIdefer","undefined","isCommitObj","__WEBPACK_IMPORTED_MODULE_1_Lib_help__","getKey","handler","hasRequest","filter","getAll","getArgs","resultList","waitList","actionFun","unResolveRejection","Error","deferItem","push","defer","all","then","result","commitChain","error","innerRejection","innerResolve","noop","keyObj","shift","commit","e","data","item","index","splice","obj","toString","iRequest","indexOf","split"],"mappings":"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","file":"request-model.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"request-model\"] = factory();\n\telse\n\t\troot[\"request-model\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap fa2a1948a6e42af5badc","/**\r\n * @desciption conf\r\n */\r\n\r\nexport const commitToken: symbol | string = ((): symbol | string => {\r\n    const key: string = '__REQUEST__MODEL__COMMIT__TOKEN';\r\n    if (Symbol) {\r\n        return Symbol(key);\r\n    } else {\r\n        return key;\r\n    }\r\n})();\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/conf.ts","import Request from 'Request/request.ts';\r\n\r\nexport default Request;\r\n// module.exports = Request;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","/*\r\n * @description request.ts\r\n */\r\n\r\nimport { commitToken } from 'Lib/conf';\r\nimport logger from 'Lib/logger';\r\nimport Chain from 'Request/chain';\r\n\r\n// tslint:disable no-any no-unsafe-any\r\n\r\n// export interface IRequest {\r\n//     [key: string]: Function | IRequest;\r\n// }\r\nexport interface IRequest {\r\n    request: {\r\n        [key: string]: Function;\r\n    };\r\n    modules: {\r\n        [key: string]: IRequest;\r\n    };\r\n}\r\n\r\nexport interface Irequest {\r\n    [key: string]: Function;\r\n}\r\n\r\ninterface IModule {\r\n    [key: string]: IRequestConfig;\r\n}\r\n\r\nexport interface IAction {\r\n    [key: string]: Function;\r\n}\r\n\r\ninterface IConfig {\r\n    promiseWrap?: boolean;\r\n    [key: string]: boolean;\r\n}\r\n\r\nexport interface IcommitWrap {\r\n    key: string;\r\n    args: any[];\r\n}\r\n\r\nexport interface IRequestConfig {\r\n    request: Irequest;\r\n    modules?: IModule;\r\n    config?: IConfig;\r\n    action?: IAction;\r\n}\r\n\r\ninterface IoutputRequest {\r\n    request: IRequest;\r\n}\r\n\r\ninterface IrequestConfig {\r\n    config: IConfig;\r\n    modules: {\r\n        [key: string]: IrequestConfig;\r\n    };\r\n}\r\n\r\nconst defaultConfig: IConfig = {\r\n    promiseWrap: false,\r\n};\r\n\r\n// export interface IcommitWrap {\r\n//     [commitToken]: boolean;\r\n//     key: string;\r\n//     args: any[];\r\n// }\r\n\r\n// tslint:disable promise-function-async\r\nconst formatFunctionToPromise: Function = (\r\n    flag: boolean,\r\n    fn: Function,\r\n): Function => {\r\n    if (flag) {\r\n        return (...args: any[]): Promise<any> => {\r\n            return new Promise(\r\n                (resolve: Function, reject: Function): any => {\r\n                    fn.call(null, resolve, reject, ...args);\r\n                },\r\n            );\r\n        };\r\n    } else {\r\n        return fn;\r\n    }\r\n};\r\n// tslint:enable promise-function-async\r\n\r\n/**\r\n * class Request\r\n */\r\nexport default class Request {\r\n    public request: IRequest;\r\n\r\n    private requestConfig: IRequestConfig;\r\n    private setting: IrequestConfig;\r\n    private action: IAction;\r\n\r\n    constructor(request: IRequestConfig) {\r\n        this.requestConfig = request;\r\n\r\n        this.setting = this.getRequestConfig();\r\n        console.log(this.setting);\r\n        this.action = this.requestConfig.action;\r\n        this.requestFormat();\r\n    }\r\n\r\n    public chain(): Chain {\r\n        return new Chain(this.request, this.action);\r\n    }\r\n\r\n    public commitWrap(key: string, ...args: any[]): object {\r\n        return {\r\n            [commitToken]: true,\r\n            key,\r\n            args: [...args],\r\n        };\r\n    }\r\n\r\n    public commitAll(commitWrap: IcommitWrap[]): object[] {\r\n        return commitWrap.map(\r\n            (v: IcommitWrap): object => {\r\n                return {\r\n                    [commitToken]: true,\r\n                    key: v.key,\r\n                    args: [...v.args],\r\n                };\r\n            },\r\n        );\r\n    }\r\n\r\n    private requestFormat(): void {\r\n        const outputRequest: IRequest = {\r\n            request: {},\r\n            modules: {},\r\n        };\r\n        const requestKes: string[] = Object.keys.call(\r\n            null,\r\n            this.requestConfig.request || {},\r\n        );\r\n        const modulesKeys: string[] = Object.keys.call(\r\n            null,\r\n            this.requestConfig.modules || {},\r\n        );\r\n\r\n        for (const i of requestKes) {\r\n            outputRequest.request[i] = formatFunctionToPromise(\r\n                this.setting.config.promiseWrap,\r\n                this.requestConfig.request[i],\r\n            );\r\n        }\r\n\r\n        const loopRequest: Function = (\r\n            mKeys: string[],\r\n            setting: IrequestConfig,\r\n            pModule: IModule,\r\n            resultRequest: IRequest,\r\n        ) => {\r\n            for (const i of mKeys) {\r\n                const tmpRequest: IRequest = {\r\n                    request: {},\r\n                    modules: {},\r\n                };\r\n                const tmpKeys: string[] = Object.keys.call(\r\n                    null,\r\n                    pModule[i].request || {},\r\n                );\r\n                for (const j of tmpKeys) {\r\n                    tmpRequest.request[j] = formatFunctionToPromise(\r\n                        setting.modules[i].config.promiseWrap,\r\n                        <Function>pModule[i].request[j],\r\n                    );\r\n                }\r\n                resultRequest.modules[i] = tmpRequest;\r\n\r\n                const subModules: string[] = Object.keys.call(\r\n                    null,\r\n                    pModule[i].modules || {},\r\n                );\r\n                if (subModules.length) {\r\n                    loopRequest(\r\n                        subModules,\r\n                        setting.modules[i],\r\n                        pModule[i].modules,\r\n                        resultRequest.modules[i],\r\n                    );\r\n                }\r\n            }\r\n        };\r\n        loopRequest(\r\n            modulesKeys,\r\n            this.setting,\r\n            this.requestConfig.modules,\r\n            outputRequest,\r\n        );\r\n\r\n        this.request = outputRequest;\r\n        console.log(this.request);\r\n    }\r\n\r\n    private getRequestConfig(): IrequestConfig {\r\n        const tmpConfig: IrequestConfig = {\r\n            config: defaultConfig,\r\n            modules: {},\r\n        };\r\n        const keys: string[] = Object.keys.call(\r\n            null,\r\n            this.requestConfig.config || {},\r\n        );\r\n        const modulesKeys: string[] = Object.keys.call(\r\n            null,\r\n            this.requestConfig.modules || {},\r\n        );\r\n\r\n        keys.map(\r\n            (v: string): void => {\r\n                tmpConfig.config[v] = this.requestConfig.config[v];\r\n            },\r\n        );\r\n\r\n        const loopModules = (\r\n            modulesKeys: string[],\r\n            modules: IModule,\r\n            pModules: IrequestConfig,\r\n        ) => {\r\n            for (const i of modulesKeys) {\r\n                pModules.modules[i] = {\r\n                    config: { ...pModules.config },\r\n                    modules: {},\r\n                };\r\n                const tmpKeys: string[] = Object.keys.call(\r\n                    null,\r\n                    modules[i].config || {},\r\n                );\r\n                for (const j of tmpKeys) {\r\n                    pModules.modules[i].config[j] = modules[i].config[j];\r\n                }\r\n\r\n                // 如果还有子module 循环\r\n                const subModules: string[] = Object.keys.call(\r\n                    null,\r\n                    modules[i].modules || {},\r\n                );\r\n                if (subModules.length) {\r\n                    loopModules(\r\n                        subModules,\r\n                        modules[i].modules,\r\n                        pModules.modules[i],\r\n                    );\r\n                }\r\n            }\r\n        };\r\n        loopModules(modulesKeys, this.requestConfig.modules, tmpConfig);\r\n\r\n        return tmpConfig;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/request/request.ts","/**\r\n * @description chain\r\n */\r\nimport { commitToken } from 'Lib/conf';\r\nimport { isArray, isObject, isPromise } from 'Lib/help';\r\nimport { getFunctionInRequest } from 'Request/data';\r\nimport { IAction, IcommitWrap, IRequest } from 'Request/request';\r\n\r\n// tslint:disable no-any no-unsafe-any\r\n\r\ninterface Idefer {\r\n    key: deferKey;\r\n    args: any[];\r\n}\r\n\r\ntype deferKey = string | string[] | IcommitObj[];\r\ntype deferKeyItem = string | IcommitObj;\r\n\r\ninterface Ithen {\r\n    resolve: Function;\r\n    reject: Function;\r\n}\r\n\r\ninterface IcommitObj {\r\n    handler: string;\r\n    args: any[];\r\n}\r\n\r\nfunction isIdefer(v: any): v is Idefer {\r\n    return v.key !== undefined;\r\n}\r\nconst isCommitObj: Function = (v: any): boolean => {\r\n    return isObject(v) ? 'handler' in v : false;\r\n};\r\n\r\nconst getKey: Function = (v: deferKeyItem): string => {\r\n    return isCommitObj(v) ? (<IcommitObj>v).handler : <string>v;\r\n};\r\n\r\nconst getArgs: Function = (v: deferKeyItem): any[] => {\r\n    return isCommitObj(v) ? (<IcommitObj>v).args : [];\r\n};\r\n\r\nconst hasRequest: Function = (key: deferKey, request: IRequest): boolean => {\r\n    if (isArray(key)) {\r\n        return (\r\n            (<(string | IcommitObj)[]>key).filter(\r\n                (v: string | IcommitObj): boolean =>\r\n                    !!getFunctionInRequest(getKey(v), request),\r\n            ).length === (<(string | IcommitObj)[]>key).length\r\n        );\r\n    } else {\r\n        return !!getFunctionInRequest(<string>key, request);\r\n    }\r\n};\r\n\r\nconst getAll: Function = (\r\n    key: (string | IcommitObj)[],\r\n    request: IRequest,\r\n    args: any[],\r\n): Function[] => {\r\n    return key.map(\r\n        (v: string | IcommitObj): Function =>\r\n            getFunctionInRequest(getKey(v), request)(...getArgs(v), ...args),\r\n    );\r\n};\r\n\r\n/**\r\n * default class Chain\r\n */\r\nexport default class Chain {\r\n    private request: IRequest;\r\n    private actionFun: IAction;\r\n    private deferItem: Promise<any> | null;\r\n    private waitList: (Idefer | Ithen)[];\r\n    private resultList: any[];\r\n    private resolve: Function;\r\n    private reject: Function;\r\n    private unResolveRejection: any;\r\n\r\n    constructor(request: IRequest, action: IAction) {\r\n        this.request = request;\r\n        this.resultList = [];\r\n        this.waitList = [];\r\n        this.actionFun = action;\r\n    }\r\n\r\n    public commit(key: deferKey, ...args: any[]): Chain {\r\n        if (this.unResolveRejection) {\r\n            return this;\r\n        }\r\n        if (!hasRequest(key, this.request)) {\r\n            throw new Error(`can not find matched ${key} function`);\r\n        }\r\n\r\n        if (this.deferItem) {\r\n            this.waitList.push({\r\n                key,\r\n                args,\r\n            });\r\n        } else {\r\n            let defer: Promise<any>;\r\n            if (isArray(key)) {\r\n                defer = Promise.all(getAll(key, this.request, [...args]));\r\n            } else {\r\n                defer = getFunctionInRequest(<string>key, this.request)(\r\n                    ...args,\r\n                );\r\n            }\r\n            if (!isPromise(defer)) {\r\n                throw new Error(\r\n                    `The ${key} function not return a Promise function`,\r\n                );\r\n            }\r\n            // call entry one\r\n            this.deferItem = defer;\r\n            this.deferItem.then(\r\n                (result: any) => {\r\n                    this.commitChain(result);\r\n                },\r\n                (error: any) => {\r\n                    this.innerRejection(error);\r\n                },\r\n            );\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    public then(resolve: Function, reject?: Function): Chain {\r\n        if (this.deferItem) {\r\n            this.waitList.push({\r\n                resolve,\r\n                reject,\r\n            });\r\n        } else {\r\n            this.innerResolve({ resolve, reject });\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    public finish(resolve: Function, reject?: Function): Chain {\r\n        if (!this.waitList.length && !this.deferItem) {\r\n            this.innerResolve({ resolve, reject });\r\n        } else {\r\n            this.resolve = resolve;\r\n            this.reject = reject;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    // tslint:disable no-reserved-keywords\r\n    public catch(reject: Function): Chain {\r\n        const noop: Function = (): void => {};\r\n        if (!this.waitList.length && !this.deferItem) {\r\n            this.innerResolve({ resolve: noop, reject });\r\n        } else {\r\n            this.reject = reject;\r\n        }\r\n\r\n        return this;\r\n    }\r\n    // tslint:enable no-reserved-keywords\r\n\r\n    public action(key: string, ...args: any[]): Chain {\r\n        return this.actionFun[key].call(null, this, ...args);\r\n    }\r\n\r\n    private commitChain(result: any): void {\r\n        this.resultList.push(result);\r\n        if (this.waitList.length) {\r\n            const keyObj: Idefer | Ithen = this.waitList.shift();\r\n            this.deferItem = null;\r\n            // if ('key' in keyObj) {\r\n            if (isIdefer(keyObj)) {\r\n                // object Idefer\r\n                this.commit(keyObj.key, ...keyObj.args, result);\r\n            } else {\r\n                // object Ithen\r\n                this.innerResolve(keyObj, result);\r\n            }\r\n        } else {\r\n            if (this.resolve) {\r\n                this.resolve(this.resultList);\r\n            }\r\n        }\r\n    }\r\n\r\n    private innerResolve(then: Ithen, result?: any): Chain {\r\n        // call entry two\r\n        let deferItem: any;\r\n        if (this.unResolveRejection) {\r\n            if (then.reject) {\r\n                then.reject(this.unResolveRejection);\r\n                this.unResolveRejection = null;\r\n            } else if (this.innerRejection(this.unResolveRejection)) {\r\n                this.unResolveRejection = null;\r\n            }\r\n\r\n            return this;\r\n        } else {\r\n            try {\r\n                deferItem = then.resolve(result);\r\n            } catch (e) {\r\n                if (!this.innerRejection(e)) {\r\n                    this.unResolveRejection = e;\r\n                }\r\n\r\n                return this;\r\n            }\r\n        }\r\n        if (isPromise(deferItem)) {\r\n            // object Promise\r\n            this.deferItem = deferItem;\r\n            deferItem.then(\r\n                (data: any) => {\r\n                    this.commitChain(data);\r\n                },\r\n                (error: any) => {\r\n                    this.innerRejection(error);\r\n                },\r\n            );\r\n        } else if (isArray(deferItem)) {\r\n            // 暂时可以认为一定是 commitAll 包装\r\n            const item: IcommitObj[] = deferItem.map((v: IcommitWrap) => {\r\n                return {\r\n                    handler: v.key,\r\n                    args: v.args,\r\n                };\r\n            });\r\n            this.commit(item);\r\n        } else if (deferItem !== undefined && deferItem[commitToken]) {\r\n            // another commit\r\n            this.commit(deferItem.key, ...deferItem.args);\r\n        } else {\r\n            this.commitChain(deferItem);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    private innerRejection(error: any, fn?: Function): boolean {\r\n        let reject!: Function;\r\n        // if (this.waitList.length && !isIdefer(this.waitList[0])) {\r\n        if (this.waitList.length) {\r\n            let index: number = 0;\r\n            for (let i: number = 0; i < this.waitList.length; i = i + 1) {\r\n                if (\r\n                    !isIdefer(this.waitList[i]) &&\r\n                    (<Ithen>this.waitList[i]).reject\r\n                ) {\r\n                    reject = (<Ithen>this.waitList[i]).reject;\r\n                    index = i;\r\n                    break;\r\n                }\r\n            }\r\n            this.waitList.splice(0, index);\r\n        }\r\n        if (!reject && this.reject) {\r\n            reject = this.reject;\r\n        }\r\n        if (reject) {\r\n            if (fn) {\r\n                fn();\r\n            }\r\n            this.deferItem = null;\r\n            reject(error);\r\n\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/request/chain.ts","/**\r\n * @description help\r\n */\r\n\r\n// tslint:disable no-any no-unsafe-any\r\n\r\nexport const isArray: Function = (obj: any): boolean => {\r\n    return Object.prototype.toString.call(obj) === '[object Array]';\r\n};\r\n\r\nexport const isObject: Function = (obj: any): boolean => {\r\n    return Object.prototype.toString.call(obj) === '[object Object]';\r\n};\r\nexport const isFunction: Function = (obj: any): obj is Function => {\r\n    return Function.prototype.toString.call(obj) === '[object Function]';\r\n};\r\n\r\nexport const isPromise: Function = (obj: any): boolean => {\r\n    try {\r\n        return typeof obj.then === 'function';\r\n    } catch (e) {\r\n        return false;\r\n    }\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/help.ts","/**\r\n * @description help to find data in Request\r\n */\r\nimport { IRequest } from 'Request/request';\r\n\r\ntype Iresult = Function | undefined;\r\n\r\nexport const getFunctionInRequest: Function = (\r\n    key: string,\r\n    request: IRequest,\r\n): Iresult => {\r\n    let iRequest: IRequest = request;\r\n    let result: Function;\r\n    try {\r\n        if (key.indexOf('/') !== -1) {\r\n            const keys: string[] = key.split('/');\r\n            keys.map(\r\n                (v: string, i: number): void => {\r\n                    if (i !== keys.length - 1) {\r\n                        iRequest = iRequest.modules[v];\r\n                    } else {\r\n                        result = iRequest.request[v];\r\n                    }\r\n                },\r\n            );\r\n        } else {\r\n            result = iRequest.request[key];\r\n        }\r\n    } catch (e) {}\r\n\r\n    return result;\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/request/data.ts"],"sourceRoot":""}